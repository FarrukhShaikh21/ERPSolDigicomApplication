package dgcom.model.vo.srv;

import dgcom.model.stand.DigicomViewObjectImpl;

import dgcom.model.vo.srv.common.SrvJobqcVO;

import java.sql.CallableStatement;
import java.sql.SQLException;
import java.sql.Types;

import oracle.jbo.JboException;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Jul 01 19:12:16 PKT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SrvJobqcVOImpl extends DigicomViewObjectImpl implements SrvJobqcVO {
    /**
     * This is the default constructor (do not remove).
     */
    public SrvJobqcVOImpl() {
    }
    
    public void doSubmitJobQC() {
        
        CallableStatement cs=this.getDBTransaction().createCallableStatement("begin ?:=PKG_SERVICE.FUNC_SRV_JOB_QC_SUBMIT('"+this.getCurrentRow().getAttribute("Qcdocid")+"'); END;", 1);
        try {
            cs.registerOutParameter(1, Types.VARCHAR);
            cs.executeUpdate();
            if (!cs.getString(1).equals("Y")) {
               this.getCurrentRow().setAttribute("Posted", "N");
               this.getDBTransaction().commit();
                throw new JboException("Unable to supervise due to "+cs.getString(1));
               
           }
            this.getDBTransaction().commit();
        } catch (SQLException e) {
            this.getCurrentRow().setAttribute("Posted", "N");
            this.getDBTransaction().commit();
            System.out.println(e.getMessage()+ "this is message");
            throw new JboException("Unable to supervise ");
        }
    }

    public void doSubmitJobQCBefDeli() {
        
        CallableStatement cs=this.getDBTransaction().createCallableStatement("begin ?:=PKG_SERVICE.FUNC_SRV_JOBQC_BEF_DEL_SUBMIT('"+this.getCurrentRow().getAttribute("Qcdocid")+"'); END;", 1);
        try {
            cs.registerOutParameter(1, Types.VARCHAR);
            cs.executeUpdate();
            if (!cs.getString(1).equals("Y")) {
               this.getCurrentRow().setAttribute("Posted", "N");
               this.getDBTransaction().commit();
                throw new JboException("Unable to supervise due to "+cs.getString(1));
               
           }
            this.getDBTransaction().commit();
        } catch (SQLException e) {
            this.getCurrentRow().setAttribute("Posted", "N");
            this.getDBTransaction().commit();
            System.out.println(e.getMessage()+ "this is message");
            throw new JboException("Unable to supervise ");
        }
    }
    /**
     * Returns the variable value for P_ADF_DOCTYPE_ID.
     * @return variable value for P_ADF_DOCTYPE_ID
     */
    public String getP_ADF_DOCTYPE_ID() {
        return (String) ensureVariableManager().getVariableValue("P_ADF_DOCTYPE_ID");
    }

    /**
     * Sets <code>value</code> for variable P_ADF_DOCTYPE_ID.
     * @param value value to bind as P_ADF_DOCTYPE_ID
     */
    public void setP_ADF_DOCTYPE_ID(String value) {
        ensureVariableManager().setVariableValue("P_ADF_DOCTYPE_ID", value);
    }
}

