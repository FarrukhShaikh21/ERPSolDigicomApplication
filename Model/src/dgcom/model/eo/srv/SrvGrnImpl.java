package dgcom.model.eo.srv;

import dgcom.model.stand.DigicomClass;
import dgcom.model.stand.DigicomEntityImpl;

import oracle.jbo.ApplicationModule;
import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.ViewObject;
import oracle.jbo.domain.Date;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Aug 06 14:05:36 PKT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SrvGrnImpl extends DigicomEntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        GrnId,
        Locationid,
        Supplierid,
        Poid,
        DocTypeId,
        GrnDate,
        BiltyNo,
        ChallanNo,
        ChallanNoDate,
        Remarks,
        Posted,
        Postedby,
        Createdby,
        CreatedDate,
        Modifiedby,
        ModifiedDate,
        IsMigrated,
        MigratedDate,
        txtItemId,
        txtModelName,
        txtSupplierName,
        SrvGrnParts,
        PuSupplierInvoices,
        PuSuppliers,
        AccSrvGrnPartId;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int GRNID = AttributesEnum.GrnId.index();
    public static final int LOCATIONID = AttributesEnum.Locationid.index();
    public static final int SUPPLIERID = AttributesEnum.Supplierid.index();
    public static final int POID = AttributesEnum.Poid.index();
    public static final int DOCTYPEID = AttributesEnum.DocTypeId.index();
    public static final int GRNDATE = AttributesEnum.GrnDate.index();
    public static final int BILTYNO = AttributesEnum.BiltyNo.index();
    public static final int CHALLANNO = AttributesEnum.ChallanNo.index();
    public static final int CHALLANNODATE = AttributesEnum.ChallanNoDate.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int POSTED = AttributesEnum.Posted.index();
    public static final int POSTEDBY = AttributesEnum.Postedby.index();
    public static final int CREATEDBY = AttributesEnum.Createdby.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int MODIFIEDBY = AttributesEnum.Modifiedby.index();
    public static final int MODIFIEDDATE = AttributesEnum.ModifiedDate.index();
    public static final int ISMIGRATED = AttributesEnum.IsMigrated.index();
    public static final int MIGRATEDDATE = AttributesEnum.MigratedDate.index();
    public static final int TXTITEMID = AttributesEnum.txtItemId.index();
    public static final int TXTMODELNAME = AttributesEnum.txtModelName.index();
    public static final int TXTSUPPLIERNAME = AttributesEnum.txtSupplierName.index();
    public static final int SRVGRNPARTS = AttributesEnum.SrvGrnParts.index();
    public static final int PUSUPPLIERINVOICES = AttributesEnum.PuSupplierInvoices.index();
    public static final int PUSUPPLIERS = AttributesEnum.PuSuppliers.index();
    public static final int ACCSRVGRNPARTID = AttributesEnum.AccSrvGrnPartId.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SrvGrnImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("dgcom.model.eo.srv.SrvGrn");
    }


    /**
     * Gets the attribute value for GrnId, using the alias name GrnId.
     * @return the value of GrnId
     */
    public String getGrnId() {
        return (String) getAttributeInternal(GRNID);
    }

    /**
     * Sets <code>value</code> as the attribute value for GrnId.
     * @param value value to set the GrnId
     */
    public void setGrnId(String value) {
        setAttributeInternal(GRNID, value);
    }

    /**
     * Gets the attribute value for Locationid, using the alias name Locationid.
     * @return the value of Locationid
     */
    public String getLocationid() {
        return (String) getAttributeInternal(LOCATIONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Locationid.
     * @param value value to set the Locationid
     */
    public void setLocationid(String value) {
        setAttributeInternal(LOCATIONID, value);
    }

    /**
     * Gets the attribute value for Supplierid, using the alias name Supplierid.
     * @return the value of Supplierid
     */
    public String getSupplierid() {
        return (String) getAttributeInternal(SUPPLIERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Supplierid.
     * @param value value to set the Supplierid
     */
    public void setSupplierid(String value) {
        setAttributeInternal(SUPPLIERID, value);
    }

    /**
     * Gets the attribute value for Poid, using the alias name Poid.
     * @return the value of Poid
     */
    public String getPoid() {
        return (String) getAttributeInternal(POID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Poid.
     * @param value value to set the Poid
     */
    public void setPoid(String value) {
        setAttributeInternal(POID, value);
       
        try {
            
            getAccSrvGrnPartId().setNamedWhereClauseParam("P_ADF_POID", value);
            getAccSrvGrnPartId().executeQuery();
            getAccSrvGrnPartId().first();
            ApplicationModule am=this.getDBTransaction().getRootApplicationModule();
            
            ViewObject vo=am.findViewObject("SrvGrnPartsDETCRUD");
            while(getSrvGrnParts().getRowCount()>0) {
                getSrvGrnParts().first().remove();
            }
            vo.executeQuery();
            if (getAccSrvGrnPartId().getRowCount()>0) {
                Row r;
               for (int i = 0; i < getAccSrvGrnPartId().getRowCount(); i++) {
                //while(getAccSrvGrnPartId().hasNext()){
                    r=this.getSrvGrnParts().createRow();
                    r.setAttribute("Partid", getAccSrvGrnPartId().getCurrentRow().getAttribute("Partid"));
                    r.setAttribute("GrnQty", getAccSrvGrnPartId().getCurrentRow().getAttribute("Qty"));
                    r.setAttribute("Poitemid", getAccSrvGrnPartId().getCurrentRow().getAttribute("Poitemid"));
                    r.setAttribute("Rate", getAccSrvGrnPartId().getCurrentRow().getAttribute("Rate"));
                    r.setAttribute("Storeid", getAccSrvGrnPartId().getCurrentRow().getAttribute("ReceStoreid"));
                   // r.setAttribute("SrvInvno", getSrvInvno());
                    getSrvGrnParts().insertRow(r);
                    vo.executeQuery();
                     if (getAccSrvGrnPartId().hasNext()) {
                       getAccSrvGrnPartId().next();
                   }
                }
            }


        } catch (NullPointerException e) {
            
        }
    }

    /**
     * Gets the attribute value for DocTypeId, using the alias name DocTypeId.
     * @return the value of DocTypeId
     */
    public String getDocTypeId() {
        return (String) getAttributeInternal(DOCTYPEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocTypeId.
     * @param value value to set the DocTypeId
     */
    public void setDocTypeId(String value) {
        setAttributeInternal(DOCTYPEID, value);
    }

    /**
     * Gets the attribute value for GrnDate, using the alias name GrnDate.
     * @return the value of GrnDate
     */
    public Date getGrnDate() {
        return (Date) getAttributeInternal(GRNDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for GrnDate.
     * @param value value to set the GrnDate
     */
    public void setGrnDate(Date value) {
        setAttributeInternal(GRNDATE, value);
    }

    /**
     * Gets the attribute value for BiltyNo, using the alias name BiltyNo.
     * @return the value of BiltyNo
     */
    public String getBiltyNo() {
        return (String) getAttributeInternal(BILTYNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for BiltyNo.
     * @param value value to set the BiltyNo
     */
    public void setBiltyNo(String value) {
        setAttributeInternal(BILTYNO, value);
    }

    @Override
    protected void validateEntity() {
        // TODO Implement this method
        System.out.println("Pakistan-validateEntity");
        super.validateEntity();
    }

    /**
     * Gets the attribute value for ChallanNo, using the alias name ChallanNo.
     * @return the value of ChallanNo
     */
    public String getChallanNo() {
        return (String) getAttributeInternal(CHALLANNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for ChallanNo.
     * @param value value to set the ChallanNo
     */
    public void setChallanNo(String value) {
        setAttributeInternal(CHALLANNO, value);
    }

    /**
     * Gets the attribute value for ChallanNoDate, using the alias name ChallanNoDate.
     * @return the value of ChallanNoDate
     */
    public Date getChallanNoDate() {
        return (Date) getAttributeInternal(CHALLANNODATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ChallanNoDate.
     * @param value value to set the ChallanNoDate
     */
    public void setChallanNoDate(Date value) {
        setAttributeInternal(CHALLANNODATE, value);
    }

    /**
     * Gets the attribute value for Remarks, using the alias name Remarks.
     * @return the value of Remarks
     */
    public String getRemarks() {
        return (String) getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Remarks.
     * @param value value to set the Remarks
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for Posted, using the alias name Posted.
     * @return the value of Posted
     */
    public String getPosted() {
        return (String) getAttributeInternal(POSTED);
    }

    /**
     * Sets <code>value</code> as the attribute value for Posted.
     * @param value value to set the Posted
     */
    public void setPosted(String value) {
        setAttributeInternal(POSTED, value);
    }

    /**
     * Gets the attribute value for Postedby, using the alias name Postedby.
     * @return the value of Postedby
     */
    public String getPostedby() {
        return (String) getAttributeInternal(POSTEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Postedby.
     * @param value value to set the Postedby
     */
    public void setPostedby(String value) {
        setAttributeInternal(POSTEDBY, value);
    }

    /**
     * Gets the attribute value for Createdby, using the alias name Createdby.
     * @return the value of Createdby
     */
    public String getCreatedby() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Createdby.
     * @param value value to set the Createdby
     */
    public void setCreatedby(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreatedDate, using the alias name CreatedDate.
     * @return the value of CreatedDate
     */
    public Date getCreatedDate() {
        return (Date) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedDate.
     * @param value value to set the CreatedDate
     */
    public void setCreatedDate(Date value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**
     * Gets the attribute value for Modifiedby, using the alias name Modifiedby.
     * @return the value of Modifiedby
     */
    public String getModifiedby() {
        return (String) getAttributeInternal(MODIFIEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Modifiedby.
     * @param value value to set the Modifiedby
     */
    public void setModifiedby(String value) {
        setAttributeInternal(MODIFIEDBY, value);
    }

    /**
     * Gets the attribute value for ModifiedDate, using the alias name ModifiedDate.
     * @return the value of ModifiedDate
     */
    public Date getModifiedDate() {
        return (Date) getAttributeInternal(MODIFIEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ModifiedDate.
     * @param value value to set the ModifiedDate
     */
    public void setModifiedDate(Date value) {
        setAttributeInternal(MODIFIEDDATE, value);
    }

    /**
     * Gets the attribute value for IsMigrated, using the alias name IsMigrated.
     * @return the value of IsMigrated
     */
    public String getIsMigrated() {
        return (String) getAttributeInternal(ISMIGRATED);
    }

    /**
     * Sets <code>value</code> as the attribute value for IsMigrated.
     * @param value value to set the IsMigrated
     */
    public void setIsMigrated(String value) {
        setAttributeInternal(ISMIGRATED, value);
    }

    /**
     * Gets the attribute value for MigratedDate, using the alias name MigratedDate.
     * @return the value of MigratedDate
     */
    public Date getMigratedDate() {
        return (Date) getAttributeInternal(MIGRATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for MigratedDate.
     * @param value value to set the MigratedDate
     */
    public void setMigratedDate(Date value) {
        setAttributeInternal(MIGRATEDDATE, value);
    }

    /**
     * Gets the attribute value for txtItemId, using the alias name txtItemId.
     * @return the value of txtItemId
     */
    public String gettxtItemId() {
        return (String) getAttributeInternal(TXTITEMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for txtItemId.
     * @param value value to set the txtItemId
     */
    public void settxtItemId(String value) {
        setAttributeInternal(TXTITEMID, value);
    }

    /**
     * Gets the attribute value for txtModelName, using the alias name txtModelName.
     * @return the value of txtModelName
     */
    public String gettxtModelName() {
        return (String) getAttributeInternal(TXTMODELNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for txtModelName.
     * @param value value to set the txtModelName
     */
    public void settxtModelName(String value) {
        setAttributeInternal(TXTMODELNAME, value);
    }

    /**
     * Gets the attribute value for txtSupplierName, using the alias name txtSupplierName.
     * @return the value of txtSupplierName
     */
    public String gettxtSupplierName() {
        return (String) getAttributeInternal(TXTSUPPLIERNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for txtSupplierName.
     * @param value value to set the txtSupplierName
     */
    public void settxtSupplierName(String value) {
        setAttributeInternal(TXTSUPPLIERNAME, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getSrvGrnParts() {
        return (RowIterator) getAttributeInternal(SRVGRNPARTS);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getPuSupplierInvoices() {
        return (RowIterator) getAttributeInternal(PUSUPPLIERINVOICES);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getPuSuppliers() {
        return (EntityImpl) getAttributeInternal(PUSUPPLIERS);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setPuSuppliers(EntityImpl value) {
        setAttributeInternal(PUSUPPLIERS, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AccSrvGrnPartId.
     */
    public RowSet getAccSrvGrnPartId() {
        return (RowSet) getAttributeInternal(ACCSRVGRNPARTID);
    }


    /**
     * @param grnId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String grnId) {
        return new Key(new Object[] { grnId });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if (operation==DML_INSERT) {
            ApplicationModule am=this.getDBTransaction().getRootApplicationModule();
            ViewObject        vo=am.findViewObject("mySrvGrnPK");
            if (vo!=null)
                {
                   vo.remove();     
                }
            vo=am.createViewObjectFromQueryStmt("mySrvGrnPK",
                                                "Select 2||'"+getLocationid()+"'||'"+DigicomClass.doGetFormattedDate(getGrnDate().toString(), "yyMM")+"'||Lpad(nvl(max(to_number(substr(GRN_ID,-4)))+1,1) ,4,'0') as PK \n"+
                                                "from SRV_GRN \n"+
                                                "Where to_char(GRN_DATE,'rrmm') ='"+ DigicomClass.doGetFormattedDate(getGrnDate().toString(), "yyMM")+"' \n"+
                                                "and locationid = '"+getLocationid()+"'");
            vo.executeQuery();
            setGrnId(vo.first().getAttribute(0).toString());
            /*for (int i = 0; i < getSrvInvItems().getRowCount(); i++) {
                getSrvInvItems().getRowAtRangeIndex(i).setAttribute("SrvInvno", vo.first().getAttribute(0).toString());
                System.out.println(i);
           }*/

        }
        super.doDML(operation, e);
    }
}

