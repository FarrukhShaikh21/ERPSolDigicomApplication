package dgcom.model.eo.srv;

import dgcom.model.stand.DigicomClass;
import dgcom.model.stand.DigicomEntityImpl;

import java.math.BigDecimal;

import oracle.jbo.ApplicationModule;
import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.ViewObject;
import oracle.jbo.domain.Date;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Aug 17 17:07:02 PKT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SrvStnreceivingImpl extends DigicomEntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Receno,
        Locationid,
        Stnno,
        Recedate,
        Remarks,
        Posted,
        Postedby,
        Createdby,
        CreatedDate,
        Modifiedby,
        ModifiedDate,
        IsMigrated,
        MigratedDate,
        Supplierid,
        CourierNo,
        CourierAmount,
        Recenoseq,
        SrvStnreceparts,
        AccSrvStnReceivingSrvStnRecPartsDetail;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int RECENO = AttributesEnum.Receno.index();
    public static final int LOCATIONID = AttributesEnum.Locationid.index();
    public static final int STNNO = AttributesEnum.Stnno.index();
    public static final int RECEDATE = AttributesEnum.Recedate.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int POSTED = AttributesEnum.Posted.index();
    public static final int POSTEDBY = AttributesEnum.Postedby.index();
    public static final int CREATEDBY = AttributesEnum.Createdby.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int MODIFIEDBY = AttributesEnum.Modifiedby.index();
    public static final int MODIFIEDDATE = AttributesEnum.ModifiedDate.index();
    public static final int ISMIGRATED = AttributesEnum.IsMigrated.index();
    public static final int MIGRATEDDATE = AttributesEnum.MigratedDate.index();
    public static final int SUPPLIERID = AttributesEnum.Supplierid.index();
    public static final int COURIERNO = AttributesEnum.CourierNo.index();
    public static final int COURIERAMOUNT = AttributesEnum.CourierAmount.index();
    public static final int RECENOSEQ = AttributesEnum.Recenoseq.index();
    public static final int SRVSTNRECEPARTS = AttributesEnum.SrvStnreceparts.index();
    public static final int ACCSRVSTNRECEIVINGSRVSTNRECPARTSDETAIL =
        AttributesEnum.AccSrvStnReceivingSrvStnRecPartsDetail.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SrvStnreceivingImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("dgcom.model.eo.srv.SrvStnreceiving");
    }


    /**
     * Gets the attribute value for Receno, using the alias name Receno.
     * @return the value of Receno
     */
    public String getReceno() {
        return (String) getAttributeInternal(RECENO);
    }

    /**
     * Sets <code>value</code> as the attribute value for Receno.
     * @param value value to set the Receno
     */
    public void setReceno(String value) {
        setAttributeInternal(RECENO, value);
    }

    /**
     * Gets the attribute value for Locationid, using the alias name Locationid.
     * @return the value of Locationid
     */
    public String getLocationid() {
        return (String) getAttributeInternal(LOCATIONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Locationid.
     * @param value value to set the Locationid
     */
    public void setLocationid(String value) {
        setAttributeInternal(LOCATIONID, value);
    }

    /**
     * Gets the attribute value for Stnno, using the alias name Stnno.
     * @return the value of Stnno
     */
    public String getStnno() {
        return (String) getAttributeInternal(STNNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for Stnno.
     * @param value value to set the Stnno
     */

    @Override
    protected void validateEntity() {
        System.out.println("// TODO Implement this method");
        // TODO Implement this method
        
        super.validateEntity();
    }
    public void setStnno(String value) {
        setAttributeInternal(STNNO, value);
        
        try {
            
            getAccSrvStnReceivingSrvStnRecPartsDetail().setNamedWhereClauseParam("P_ADF_STNNO", value);
            getAccSrvStnReceivingSrvStnRecPartsDetail().executeQuery();
            getAccSrvStnReceivingSrvStnRecPartsDetail().first();
            ApplicationModule am=this.getDBTransaction().getRootApplicationModule();
            
            ViewObject vo=am.findViewObject("SrvStnrecepartsDETCRUD");
            while(getSrvStnreceparts().getRowCount()>0) {
                getSrvStnreceparts().first().remove();
            }
            vo.executeQuery();
            if (getAccSrvStnReceivingSrvStnRecPartsDetail().getRowCount()>0) {
                Row r;
               for (int i = 0; i < getAccSrvStnReceivingSrvStnRecPartsDetail().getRowCount(); i++) {
                    r=this.getSrvStnreceparts().createRow();
                    r.setAttribute("Stndetlid", getAccSrvStnReceivingSrvStnRecPartsDetail().getCurrentRow().getAttribute("Stndetlid"));
                    r.setAttribute("Storeid", getAccSrvStnReceivingSrvStnRecPartsDetail().getCurrentRow().getAttribute("Tostoreid"));
                    r.setAttribute("Partid", getAccSrvStnReceivingSrvStnRecPartsDetail().getCurrentRow().getAttribute("Partid"));
                    r.setAttribute("txtQty", getAccSrvStnReceivingSrvStnRecPartsDetail().getCurrentRow().getAttribute("Sqty"));
                    r.setAttribute("Receqty", getAccSrvStnReceivingSrvStnRecPartsDetail().getCurrentRow().getAttribute("Sqty"));
                    
                    r.setAttribute("Rate", getAccSrvStnReceivingSrvStnRecPartsDetail().getCurrentRow().getAttribute("Rate"));
                    getSrvStnreceparts().insertRow(r);
                    vo.executeQuery();
                   if (getAccSrvStnReceivingSrvStnRecPartsDetail().hasNext()) {
                       getAccSrvStnReceivingSrvStnRecPartsDetail().next();
                   }
                }
            }


        } catch (NullPointerException e) {
            
        }
    }

    /**
     * Gets the attribute value for Recedate, using the alias name Recedate.
     * @return the value of Recedate
     */
    public Date getRecedate() {
        return (Date) getAttributeInternal(RECEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Recedate.
     * @param value value to set the Recedate
     */
    public void setRecedate(Date value) {
        setAttributeInternal(RECEDATE, value);
    }

    /**
     * Gets the attribute value for Remarks, using the alias name Remarks.
     * @return the value of Remarks
     */
    public String getRemarks() {
        return (String) getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Remarks.
     * @param value value to set the Remarks
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for Posted, using the alias name Posted.
     * @return the value of Posted
     */
    public String getPosted() {
        return (String) getAttributeInternal(POSTED);
    }

    /**
     * Sets <code>value</code> as the attribute value for Posted.
     * @param value value to set the Posted
     */
    public void setPosted(String value) {
        setAttributeInternal(POSTED, value);
    }

    /**
     * Gets the attribute value for Postedby, using the alias name Postedby.
     * @return the value of Postedby
     */
    public String getPostedby() {
        return (String) getAttributeInternal(POSTEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Postedby.
     * @param value value to set the Postedby
     */
    public void setPostedby(String value) {
        setAttributeInternal(POSTEDBY, value);
    }

    /**
     * Gets the attribute value for Createdby, using the alias name Createdby.
     * @return the value of Createdby
     */
    public String getCreatedby() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Createdby.
     * @param value value to set the Createdby
     */
    public void setCreatedby(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreatedDate, using the alias name CreatedDate.
     * @return the value of CreatedDate
     */
    public Date getCreatedDate() {
        return (Date) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedDate.
     * @param value value to set the CreatedDate
     */
    public void setCreatedDate(Date value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**
     * Gets the attribute value for Modifiedby, using the alias name Modifiedby.
     * @return the value of Modifiedby
     */
    public String getModifiedby() {
        return (String) getAttributeInternal(MODIFIEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Modifiedby.
     * @param value value to set the Modifiedby
     */
    public void setModifiedby(String value) {
        setAttributeInternal(MODIFIEDBY, value);
    }

    /**
     * Gets the attribute value for ModifiedDate, using the alias name ModifiedDate.
     * @return the value of ModifiedDate
     */
    public Date getModifiedDate() {
        return (Date) getAttributeInternal(MODIFIEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ModifiedDate.
     * @param value value to set the ModifiedDate
     */
    public void setModifiedDate(Date value) {
        setAttributeInternal(MODIFIEDDATE, value);
    }

    /**
     * Gets the attribute value for IsMigrated, using the alias name IsMigrated.
     * @return the value of IsMigrated
     */
    public String getIsMigrated() {
        return (String) getAttributeInternal(ISMIGRATED);
    }

    /**
     * Sets <code>value</code> as the attribute value for IsMigrated.
     * @param value value to set the IsMigrated
     */
    public void setIsMigrated(String value) {
        setAttributeInternal(ISMIGRATED, value);
    }

    /**
     * Gets the attribute value for MigratedDate, using the alias name MigratedDate.
     * @return the value of MigratedDate
     */
    public Date getMigratedDate() {
        return (Date) getAttributeInternal(MIGRATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for MigratedDate.
     * @param value value to set the MigratedDate
     */
    public void setMigratedDate(Date value) {
        setAttributeInternal(MIGRATEDDATE, value);
    }


    /**
     * Gets the attribute value for Supplierid, using the alias name Supplierid.
     * @return the value of Supplierid
     */
    public String getSupplierid() {
        return (String) getAttributeInternal(SUPPLIERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Supplierid.
     * @param value value to set the Supplierid
     */
    public void setSupplierid(String value) {
        setAttributeInternal(SUPPLIERID, value);
    }

    /**
     * Gets the attribute value for CourierNo, using the alias name CourierNo.
     * @return the value of CourierNo
     */
    public String getCourierNo() {
        return (String) getAttributeInternal(COURIERNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for CourierNo.
     * @param value value to set the CourierNo
     */
    public void setCourierNo(String value) {
        setAttributeInternal(COURIERNO, value);
    }

    /**
     * Gets the attribute value for CourierAmount, using the alias name CourierAmount.
     * @return the value of CourierAmount
     */
    public BigDecimal getCourierAmount() {
        return (BigDecimal) getAttributeInternal(COURIERAMOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for CourierAmount.
     * @param value value to set the CourierAmount
     */
    public void setCourierAmount(BigDecimal value) {
        setAttributeInternal(COURIERAMOUNT, value);
    }

    /**
     * Gets the attribute value for Recenoseq, using the alias name Recenoseq.
     * @return the value of Recenoseq
     */
    public Integer getRecenoseq() {
        return (Integer) getAttributeInternal(RECENOSEQ);
    }

    /**
     * Sets <code>value</code> as the attribute value for Recenoseq.
     * @param value value to set the Recenoseq
     */
    public void setRecenoseq(Integer value) {
        setAttributeInternal(RECENOSEQ, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getSrvStnreceparts() {
        return (RowIterator) getAttributeInternal(SRVSTNRECEPARTS);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AccSrvStnReceivingSrvStnRecPartsDetail.
     */
    public RowSet getAccSrvStnReceivingSrvStnRecPartsDetail() {
        return (RowSet) getAttributeInternal(ACCSRVSTNRECEIVINGSRVSTNRECPARTSDETAIL);
    }


    /**
     * @param recenoseq key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Integer recenoseq) {
        return new Key(new Object[] { recenoseq });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        setSrvSequenceName("SRV_STNRECEIVING_SEQ");
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if (operation==DML_INSERT) {
            ApplicationModule am=this.getDBTransaction().getRootApplicationModule();
            ViewObject        vo=am.findViewObject("mySrvSTNRecPK");
            if (vo!=null)
                {
                   vo.remove();     
                }
            vo=am.createViewObjectFromQueryStmt("mySrvSTNRecPK",
                                                "Select 2||'"+getLocationid()+"'||'"+DigicomClass.doGetFormattedDate(getRecedate().toString(), "yyMM")+"'||Lpad(nvl(max(to_number(substr(RECENO,-4)))+1,1) ,4,'0') as PK \n"+
                                                "from SRV_STNRECEIVING \n"+
                                                "Where to_char(receDATE,'rrmm') ='"+ DigicomClass.doGetFormattedDate(getRecedate().toString(), "yyMM")+"' \n"+
                                                "and locationid = '"+getLocationid()+"'");
            vo.executeQuery();
            setReceno(vo.first().getAttribute(0).toString());
            /*for (int i = 0; i < getSrvInvItems().getRowCount(); i++) {
                getSrvInvItems().getRowAtRangeIndex(i).setAttribute("SrvInvno", vo.first().getAttribute(0).toString());
                System.out.println(i);
           }*/

        }
        super.doDML(operation, e);
    }
}

