package dgcom.model.eo.srv;

import dgcom.model.stand.DigicomEntityImpl;

import oracle.jbo.AttributeList;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.RowID;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Jun 23 09:48:04 PKT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SrvJobassdetlImpl extends DigicomEntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Jobcardno,
        Assignid,
        Createdby,
        CreatedDate,
        Modifiedby,
        ModifiedDate,
        Jobstatus,
        PrevDoctype,
        PrevDocid,
        Cdate,
        Mdate,
        Rowid,
        SrvJobassign,
        AccSrvIssueDetailProdIdCIC_0013;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int JOBCARDNO = AttributesEnum.Jobcardno.index();
    public static final int ASSIGNID = AttributesEnum.Assignid.index();
    public static final int CREATEDBY = AttributesEnum.Createdby.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int MODIFIEDBY = AttributesEnum.Modifiedby.index();
    public static final int MODIFIEDDATE = AttributesEnum.ModifiedDate.index();
    public static final int JOBSTATUS = AttributesEnum.Jobstatus.index();
    public static final int PREVDOCTYPE = AttributesEnum.PrevDoctype.index();
    public static final int PREVDOCID = AttributesEnum.PrevDocid.index();
    public static final int CDATE = AttributesEnum.Cdate.index();
    public static final int MDATE = AttributesEnum.Mdate.index();
    public static final int ROWID = AttributesEnum.Rowid.index();
    public static final int SRVJOBASSIGN = AttributesEnum.SrvJobassign.index();
    public static final int ACCSRVISSUEDETAILPRODIDCIC_0013 = AttributesEnum.AccSrvIssueDetailProdIdCIC_0013.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SrvJobassdetlImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("dgcom.model.eo.srv.SrvJobassdetl");
    }


    /**
     * Gets the attribute value for Jobcardno, using the alias name Jobcardno.
     * @return the value of Jobcardno
     */
    public String getJobcardno() {
        return (String) getAttributeInternal(JOBCARDNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for Jobcardno.
     * @param value value to set the Jobcardno
     */
    public void setJobcardno(String value) {
        setAttributeInternal(JOBCARDNO, value);
    }

    /**
     * Gets the attribute value for Assignid, using the alias name Assignid.
     * @return the value of Assignid
     */
    public String getAssignid() {
        return (String) getAttributeInternal(ASSIGNID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Assignid.
     * @param value value to set the Assignid
     */
    public void setAssignid(String value) {
        setAttributeInternal(ASSIGNID, value);
    }

    /**
     * Gets the attribute value for Createdby, using the alias name Createdby.
     * @return the value of Createdby
     */
    public String getCreatedby() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Createdby.
     * @param value value to set the Createdby
     */
    public void setCreatedby(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreatedDate, using the alias name CreatedDate.
     * @return the value of CreatedDate
     */
    public Date getCreatedDate() {
        return (Date) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedDate.
     * @param value value to set the CreatedDate
     */
    public void setCreatedDate(Date value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**
     * Gets the attribute value for Modifiedby, using the alias name Modifiedby.
     * @return the value of Modifiedby
     */
    public String getModifiedby() {
        return (String) getAttributeInternal(MODIFIEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Modifiedby.
     * @param value value to set the Modifiedby
     */
    public void setModifiedby(String value) {
        setAttributeInternal(MODIFIEDBY, value);
    }

    /**
     * Gets the attribute value for ModifiedDate, using the alias name ModifiedDate.
     * @return the value of ModifiedDate
     */
    public Date getModifiedDate() {
        return (Date) getAttributeInternal(MODIFIEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ModifiedDate.
     * @param value value to set the ModifiedDate
     */
    public void setModifiedDate(Date value) {
        setAttributeInternal(MODIFIEDDATE, value);
    }

    /**
     * Gets the attribute value for Jobstatus, using the alias name Jobstatus.
     * @return the value of Jobstatus
     */
    public String getJobstatus() {
        return (String) getAttributeInternal(JOBSTATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Jobstatus.
     * @param value value to set the Jobstatus
     */
    public void setJobstatus(String value) {
        setAttributeInternal(JOBSTATUS, value);
    }

    /**
     * Gets the attribute value for PrevDoctype, using the alias name PrevDoctype.
     * @return the value of PrevDoctype
     */
    public String getPrevDoctype() {
        return (String) getAttributeInternal(PREVDOCTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for PrevDoctype.
     * @param value value to set the PrevDoctype
     */
    public void setPrevDoctype(String value) {
        setAttributeInternal(PREVDOCTYPE, value);
    }

    /**
     * Gets the attribute value for PrevDocid, using the alias name PrevDocid.
     * @return the value of PrevDocid
     */
    public String getPrevDocid() {
        return (String) getAttributeInternal(PREVDOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for PrevDocid.
     * @param value value to set the PrevDocid
     */
    public void setPrevDocid(String value) {
        setAttributeInternal(PREVDOCID, value);
    }

    /**
     * Gets the attribute value for Cdate, using the alias name Cdate.
     * @return the value of Cdate
     */
    public Date getCdate() {
        return (Date) getAttributeInternal(CDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Cdate.
     * @param value value to set the Cdate
     */
    public void setCdate(Date value) {
        setAttributeInternal(CDATE, value);
    }

    /**
     * Gets the attribute value for Mdate, using the alias name Mdate.
     * @return the value of Mdate
     */
    public Date getMdate() {
        return (Date) getAttributeInternal(MDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Mdate.
     * @param value value to set the Mdate
     */
    public void setMdate(Date value) {
        setAttributeInternal(MDATE, value);
    }

    /**
     * Gets the attribute value for Rowid, using the alias name Rowid.
     * @return the value of Rowid
     */
    public RowID getRowid() {
        return (RowID) getAttributeInternal(ROWID);
    }

    /**
     * @return the associated entity SrvJobassignImpl.
     */
    public SrvJobassignImpl getSrvJobassign() {
        return (SrvJobassignImpl) getAttributeInternal(SRVJOBASSIGN);
    }

    /**
     * Sets <code>value</code> as the associated entity SrvJobassignImpl.
     */
    public void setSrvJobassign(SrvJobassignImpl value) {
        setAttributeInternal(SRVJOBASSIGN, value);
    }


    /**
     * Gets the view accessor <code>RowSet</code> AccSrvIssueDetailProdIdCIC_0013.
     */
    public RowSet getAccSrvIssueDetailProdIdCIC_0013() {
        return (RowSet) getAttributeInternal(ACCSRVISSUEDETAILPRODIDCIC_0013);
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if (operation==DML_INSERT && getJobcardno()==null) {
            remove();
            return;
        }        
        super.doDML(operation, e);
    }
}

