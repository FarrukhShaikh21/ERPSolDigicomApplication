package dgcom.model.eo.srv;

import dgcom.model.stand.DigicomClass;
import dgcom.model.stand.DigicomEntityImpl;

import oracle.jbo.ApplicationModule;
import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.ViewObject;
import oracle.jbo.domain.Date;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Aug 01 15:21:04 PKT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AllDemandNoteImpl extends DigicomEntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        DemandId,
        Deptid,
        DemandDate,
        Demandtype,
        Demandstatus,
        Remarks,
        Posted,
        Postedby,
        Createdby,
        CreatedDate,
        Modifiedby,
        ModifiedDate,
        Locationid,
        ToLocationid,
        ProdId,
        DmdFor,
        IsMigrated,
        MigratedDate,
        txtModel,
        txtModelName,
        AllDemandLines;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int DEMANDID = AttributesEnum.DemandId.index();
    public static final int DEPTID = AttributesEnum.Deptid.index();
    public static final int DEMANDDATE = AttributesEnum.DemandDate.index();
    public static final int DEMANDTYPE = AttributesEnum.Demandtype.index();
    public static final int DEMANDSTATUS = AttributesEnum.Demandstatus.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int POSTED = AttributesEnum.Posted.index();
    public static final int POSTEDBY = AttributesEnum.Postedby.index();
    public static final int CREATEDBY = AttributesEnum.Createdby.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int MODIFIEDBY = AttributesEnum.Modifiedby.index();
    public static final int MODIFIEDDATE = AttributesEnum.ModifiedDate.index();
    public static final int LOCATIONID = AttributesEnum.Locationid.index();
    public static final int TOLOCATIONID = AttributesEnum.ToLocationid.index();
    public static final int PRODID = AttributesEnum.ProdId.index();
    public static final int DMDFOR = AttributesEnum.DmdFor.index();
    public static final int ISMIGRATED = AttributesEnum.IsMigrated.index();
    public static final int MIGRATEDDATE = AttributesEnum.MigratedDate.index();
    public static final int TXTMODEL = AttributesEnum.txtModel.index();
    public static final int TXTMODELNAME = AttributesEnum.txtModelName.index();
    public static final int ALLDEMANDLINES = AttributesEnum.AllDemandLines.index();

    /**
     * This is the default constructor (do not remove).
     */
    public AllDemandNoteImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("dgcom.model.eo.srv.AllDemandNote");
    }

    /**
     * Gets the attribute value for DemandId, using the alias name DemandId.
     * @return the value of DemandId
     */
    public String getDemandId() {
        return (String) getAttributeInternal(DEMANDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DemandId.
     * @param value value to set the DemandId
     */
    public void setDemandId(String value) {
        setAttributeInternal(DEMANDID, value);
    }

    /**
     * Gets the attribute value for Deptid, using the alias name Deptid.
     * @return the value of Deptid
     */
    public String getDeptid() {
        return (String) getAttributeInternal(DEPTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Deptid.
     * @param value value to set the Deptid
     */
    public void setDeptid(String value) {
        setAttributeInternal(DEPTID, value);
    }

    /**
     * Gets the attribute value for DemandDate, using the alias name DemandDate.
     * @return the value of DemandDate
     */
    public Date getDemandDate() {
        return (Date) getAttributeInternal(DEMANDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for DemandDate.
     * @param value value to set the DemandDate
     */
    public void setDemandDate(Date value) {
        setAttributeInternal(DEMANDDATE, value);
    }

    /**
     * Gets the attribute value for Demandtype, using the alias name Demandtype.
     * @return the value of Demandtype
     */
    public String getDemandtype() {
        return (String) getAttributeInternal(DEMANDTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Demandtype.
     * @param value value to set the Demandtype
     */
    public void setDemandtype(String value) {
        setAttributeInternal(DEMANDTYPE, value);
    }

    /**
     * Gets the attribute value for Demandstatus, using the alias name Demandstatus.
     * @return the value of Demandstatus
     */
    public String getDemandstatus() {
        return (String) getAttributeInternal(DEMANDSTATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Demandstatus.
     * @param value value to set the Demandstatus
     */
    public void setDemandstatus(String value) {
        setAttributeInternal(DEMANDSTATUS, value);
    }

    /**
     * Gets the attribute value for Remarks, using the alias name Remarks.
     * @return the value of Remarks
     */
    public String getRemarks() {
        return (String) getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Remarks.
     * @param value value to set the Remarks
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for Posted, using the alias name Posted.
     * @return the value of Posted
     */
    public String getPosted() {
        return (String) getAttributeInternal(POSTED);
    }

    /**
     * Sets <code>value</code> as the attribute value for Posted.
     * @param value value to set the Posted
     */
    public void setPosted(String value) {
        setAttributeInternal(POSTED, value);
    }

    /**
     * Gets the attribute value for Postedby, using the alias name Postedby.
     * @return the value of Postedby
     */
    public String getPostedby() {
        return (String) getAttributeInternal(POSTEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Postedby.
     * @param value value to set the Postedby
     */
    public void setPostedby(String value) {
        setAttributeInternal(POSTEDBY, value);
    }

    /**
     * Gets the attribute value for Createdby, using the alias name Createdby.
     * @return the value of Createdby
     */
    public String getCreatedby() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Createdby.
     * @param value value to set the Createdby
     */
    public void setCreatedby(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreatedDate, using the alias name CreatedDate.
     * @return the value of CreatedDate
     */
    public Date getCreatedDate() {
        return (Date) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedDate.
     * @param value value to set the CreatedDate
     */
    public void setCreatedDate(Date value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**
     * Gets the attribute value for Modifiedby, using the alias name Modifiedby.
     * @return the value of Modifiedby
     */
    public String getModifiedby() {
        return (String) getAttributeInternal(MODIFIEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Modifiedby.
     * @param value value to set the Modifiedby
     */
    public void setModifiedby(String value) {
        setAttributeInternal(MODIFIEDBY, value);
    }

    /**
     * Gets the attribute value for ModifiedDate, using the alias name ModifiedDate.
     * @return the value of ModifiedDate
     */
    public Date getModifiedDate() {
        return (Date) getAttributeInternal(MODIFIEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ModifiedDate.
     * @param value value to set the ModifiedDate
     */
    public void setModifiedDate(Date value) {
        setAttributeInternal(MODIFIEDDATE, value);
    }

    /**
     * Gets the attribute value for Locationid, using the alias name Locationid.
     * @return the value of Locationid
     */
    public String getLocationid() {
        return (String) getAttributeInternal(LOCATIONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Locationid.
     * @param value value to set the Locationid
     */
    public void setLocationid(String value) {
        setAttributeInternal(LOCATIONID, value);
    }

    /**
     * Gets the attribute value for ToLocationid, using the alias name ToLocationid.
     * @return the value of ToLocationid
     */
    public String getToLocationid() {
        return (String) getAttributeInternal(TOLOCATIONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ToLocationid.
     * @param value value to set the ToLocationid
     */
    public void setToLocationid(String value) {
        setAttributeInternal(TOLOCATIONID, value);
    }

    /**
     * Gets the attribute value for ProdId, using the alias name ProdId.
     * @return the value of ProdId
     */
    public String getProdId() {
        return (String) getAttributeInternal(PRODID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ProdId.
     * @param value value to set the ProdId
     */
    public void setProdId(String value) {
        setAttributeInternal(PRODID, value);
    }

    /**
     * Gets the attribute value for DmdFor, using the alias name DmdFor.
     * @return the value of DmdFor
     */
    public String getDmdFor() {
        return (String) getAttributeInternal(DMDFOR);
    }

    /**
     * Sets <code>value</code> as the attribute value for DmdFor.
     * @param value value to set the DmdFor
     */
    public void setDmdFor(String value) {
        setAttributeInternal(DMDFOR, value);
    }

    /**
     * Gets the attribute value for IsMigrated, using the alias name IsMigrated.
     * @return the value of IsMigrated
     */
    public String getIsMigrated() {
        return (String) getAttributeInternal(ISMIGRATED);
    }

    /**
     * Sets <code>value</code> as the attribute value for IsMigrated.
     * @param value value to set the IsMigrated
     */
    public void setIsMigrated(String value) {
        setAttributeInternal(ISMIGRATED, value);
    }

    /**
     * Gets the attribute value for MigratedDate, using the alias name MigratedDate.
     * @return the value of MigratedDate
     */
    public Date getMigratedDate() {
        return (Date) getAttributeInternal(MIGRATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for MigratedDate.
     * @param value value to set the MigratedDate
     */
    public void setMigratedDate(Date value) {
        setAttributeInternal(MIGRATEDDATE, value);
    }

    /**
     * Gets the attribute value for txtModel, using the alias name txtModel.
     * @return the value of txtModel
     */
    public String gettxtModel() {
        return (String) getAttributeInternal(TXTMODEL);
    }

    /**
     * Sets <code>value</code> as the attribute value for txtModel.
     * @param value value to set the txtModel
     */
    public void settxtModel(String value) {
        setAttributeInternal(TXTMODEL, value);
    }

    /**
     * Gets the attribute value for txtModelName, using the alias name txtModelName.
     * @return the value of txtModelName
     */
    public String gettxtModelName() {
        return (String) getAttributeInternal(TXTMODELNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for txtModelName.
     * @param value value to set the txtModelName
     */
    public void settxtModelName(String value) {
        setAttributeInternal(TXTMODELNAME, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getAllDemandLines() {
        return (RowIterator) getAttributeInternal(ALLDEMANDLINES);
    }


    /**
     * @param demandId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String demandId) {
        return new Key(new Object[] { demandId });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if (operation==DML_INSERT) {
            ApplicationModule am=this.getDBTransaction().getRootApplicationModule();
            ViewObject        vo=am.findViewObject("myAllDemandNotePK");
            if (vo!=null)
                {
                   vo.remove();     
                }
            vo=am.createViewObjectFromQueryStmt("myAllDemandNotePK",
                                                "Select 2||'"+getLocationid()+"'||'"+DigicomClass.doGetFormattedDate(getDemandDate().toString(), "yyMM")+"'||Lpad(nvl(max(to_number(substr(Demand_Id,-4)))+1,1) ,4,'0') as PK \n"+
                                                "from ALL_DEMAND_NOTE \n"+
                                                "Where to_char(Demand_Date,'rrmm') ='"+ DigicomClass.doGetFormattedDate(getDemandDate().toString(), "yyMM")+"' \n"+
                                                "and locationid = '"+getLocationid()+"'");
            vo.executeQuery();
            setDemandId(vo.first().getAttribute(0).toString());
        }  
        super.doDML(operation, e);
        }
}

