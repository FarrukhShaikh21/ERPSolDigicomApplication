package dgcom.model.eo.srv;

import dgcom.model.stand.DigicomEntityImpl;

import java.math.BigDecimal;

import oracle.jbo.AttributeList;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.RowID;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Jul 18 12:05:55 PKT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SrvIretdetailImpl extends DigicomEntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Issueretid,
        Issuedetlid,
        Storeid,
        Qty,
        RejectQty,
        Createdby,
        CreatedDate,
        Modifiedby,
        ModifiedDate,
        Rowid,
        txtStoreTransTypeId,
        txtStoreId,
        txtStoreName,
        Issueretseq,
        SrvIssuereturn,
        AllStores,
        SrvIssuereturn1;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ISSUERETID = AttributesEnum.Issueretid.index();
    public static final int ISSUEDETLID = AttributesEnum.Issuedetlid.index();
    public static final int STOREID = AttributesEnum.Storeid.index();
    public static final int QTY = AttributesEnum.Qty.index();
    public static final int REJECTQTY = AttributesEnum.RejectQty.index();
    public static final int CREATEDBY = AttributesEnum.Createdby.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int MODIFIEDBY = AttributesEnum.Modifiedby.index();
    public static final int MODIFIEDDATE = AttributesEnum.ModifiedDate.index();
    public static final int ROWID = AttributesEnum.Rowid.index();
    public static final int TXTSTORETRANSTYPEID = AttributesEnum.txtStoreTransTypeId.index();
    public static final int TXTSTOREID = AttributesEnum.txtStoreId.index();
    public static final int TXTSTORENAME = AttributesEnum.txtStoreName.index();
    public static final int ISSUERETSEQ = AttributesEnum.Issueretseq.index();
    public static final int SRVISSUERETURN = AttributesEnum.SrvIssuereturn.index();
    public static final int ALLSTORES = AttributesEnum.AllStores.index();
    public static final int SRVISSUERETURN1 = AttributesEnum.SrvIssuereturn1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SrvIretdetailImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("dgcom.model.eo.srv.SrvIretdetail");
    }


    /**
     * Gets the attribute value for Issueretid, using the alias name Issueretid.
     * @return the value of Issueretid
     */
    public String getIssueretid() {
        return (String) getAttributeInternal(ISSUERETID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Issueretid.
     * @param value value to set the Issueretid
     */
    public void setIssueretid(String value) {
        setAttributeInternal(ISSUERETID, value);
    }

    /**
     * Gets the attribute value for Issuedetlid, using the alias name Issuedetlid.
     * @return the value of Issuedetlid
     */
    public String getIssuedetlid() {
        return (String) getAttributeInternal(ISSUEDETLID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Issuedetlid.
     * @param value value to set the Issuedetlid
     */
    public void setIssuedetlid(String value) {
        setAttributeInternal(ISSUEDETLID, value);
    }

    /**
     * Gets the attribute value for Storeid, using the alias name Storeid.
     * @return the value of Storeid
     */
    public String getStoreid() {
        return (String) getAttributeInternal(STOREID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Storeid.
     * @param value value to set the Storeid
     */
    public void setStoreid(String value) {
        setAttributeInternal(STOREID, value);
    }

    /**
     * Gets the attribute value for Qty, using the alias name Qty.
     * @return the value of Qty
     */
    public BigDecimal getQty() {
        return (BigDecimal) getAttributeInternal(QTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Qty.
     * @param value value to set the Qty
     */
    public void setQty(BigDecimal value) {
        setAttributeInternal(QTY, value);
    }

    /**
     * Gets the attribute value for RejectQty, using the alias name RejectQty.
     * @return the value of RejectQty
     */
    public BigDecimal getRejectQty() {
        return (BigDecimal) getAttributeInternal(REJECTQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for RejectQty.
     * @param value value to set the RejectQty
     */
    public void setRejectQty(BigDecimal value) {
        setAttributeInternal(REJECTQTY, value);
    }

    /**
     * Gets the attribute value for Createdby, using the alias name Createdby.
     * @return the value of Createdby
     */
    public String getCreatedby() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Createdby.
     * @param value value to set the Createdby
     */
    public void setCreatedby(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreatedDate, using the alias name CreatedDate.
     * @return the value of CreatedDate
     */
    public Date getCreatedDate() {
        return (Date) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedDate.
     * @param value value to set the CreatedDate
     */
    public void setCreatedDate(Date value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**
     * Gets the attribute value for Modifiedby, using the alias name Modifiedby.
     * @return the value of Modifiedby
     */
    public String getModifiedby() {
        return (String) getAttributeInternal(MODIFIEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Modifiedby.
     * @param value value to set the Modifiedby
     */
    public void setModifiedby(String value) {
        setAttributeInternal(MODIFIEDBY, value);
    }

    /**
     * Gets the attribute value for ModifiedDate, using the alias name ModifiedDate.
     * @return the value of ModifiedDate
     */
    public Date getModifiedDate() {
        return (Date) getAttributeInternal(MODIFIEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ModifiedDate.
     * @param value value to set the ModifiedDate
     */
    public void setModifiedDate(Date value) {
        setAttributeInternal(MODIFIEDDATE, value);
    }

    /**
     * Gets the attribute value for Rowid, using the alias name Rowid.
     * @return the value of Rowid
     */
    public RowID getRowid() {
        return (RowID) getAttributeInternal(ROWID);
    }

    /**
     * Gets the attribute value for txtStoreTransTypeId, using the alias name txtStoreTransTypeId.
     * @return the value of txtStoreTransTypeId
     */
    public String gettxtStoreTransTypeId() {
        return (String) getAttributeInternal(TXTSTORETRANSTYPEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for txtStoreTransTypeId.
     * @param value value to set the txtStoreTransTypeId
     */
    public void settxtStoreTransTypeId(String value) {
        setAttributeInternal(TXTSTORETRANSTYPEID, value);
    }

    /**
     * Gets the attribute value for txtStoreId, using the alias name txtStoreId.
     * @return the value of txtStoreId
     */
    public String gettxtStoreId() {
        return (String) getAttributeInternal(TXTSTOREID);
    }

    /**
     * Sets <code>value</code> as the attribute value for txtStoreId.
     * @param value value to set the txtStoreId
     */
    public void settxtStoreId(String value) {
        setAttributeInternal(TXTSTOREID, value);
    }

    /**
     * Gets the attribute value for txtStoreName, using the alias name txtStoreName.
     * @return the value of txtStoreName
     */
    public String gettxtStoreName() {
        return (String) getAttributeInternal(TXTSTORENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for txtStoreName.
     * @param value value to set the txtStoreName
     */
    public void settxtStoreName(String value) {
        setAttributeInternal(TXTSTORENAME, value);
    }

    /**
     * Gets the attribute value for Issueretseq, using the alias name Issueretseq.
     * @return the value of Issueretseq
     */
    public Integer getIssueretseq() {
        return (Integer) getAttributeInternal(ISSUERETSEQ);
    }

    /**
     * Sets <code>value</code> as the attribute value for Issueretseq.
     * @param value value to set the Issueretseq
     */
    public void setIssueretseq(Integer value) {
        setAttributeInternal(ISSUERETSEQ, value);
    }

    /**
     * @return the associated entity SrvIssuereturnImpl.
     */
    public SrvIssuereturnImpl getSrvIssuereturn() {
        return (SrvIssuereturnImpl) getAttributeInternal(SRVISSUERETURN);
    }

    /**
     * Sets <code>value</code> as the associated entity SrvIssuereturnImpl.
     */
    public void setSrvIssuereturn(SrvIssuereturnImpl value) {
        setAttributeInternal(SRVISSUERETURN, value);
    }


    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getAllStores() {
        return (EntityImpl) getAttributeInternal(ALLSTORES);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setAllStores(EntityImpl value) {
        setAttributeInternal(ALLSTORES, value);
    }

    /**
     * @return the associated entity SrvIssuereturnImpl.
     */
    public SrvIssuereturnImpl getSrvIssuereturn1() {
        return (SrvIssuereturnImpl) getAttributeInternal(SRVISSUERETURN1);
    }

    /**
     * Sets <code>value</code> as the associated entity SrvIssuereturnImpl.
     */
    public void setSrvIssuereturn1(SrvIssuereturnImpl value) {
        setAttributeInternal(SRVISSUERETURN1, value);
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if (operation==DML_INSERT && getIssuedetlid() ==null) {
            remove();
            return;
        }  
        if (operation==DML_INSERT) {
           populateAttributeAsChanged(ISSUERETID, getSrvIssuereturn().getAttribute("Issueretid"));
       }
        super.doDML(operation, e);
    }
}

