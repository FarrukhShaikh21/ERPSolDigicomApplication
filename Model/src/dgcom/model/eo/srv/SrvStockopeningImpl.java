package dgcom.model.eo.srv;

import dgcom.model.stand.DigicomClass;
import dgcom.model.stand.DigicomEntityImpl;

import oracle.jbo.ApplicationModule;
import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.ViewObject;
import oracle.jbo.domain.Date;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Oct 07 14:46:31 PKT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SrvStockopeningImpl extends DigicomEntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Sopngid,
        Locationid,
        Odate,
        Remarks,
        Posted,
        Postedby,
        Createdby,
        CreatedDate,
        Modifiedby,
        ModifiedDate,
        txtItemId,
        txtPartCategory,
        SrvOpenparts;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int SOPNGID = AttributesEnum.Sopngid.index();
    public static final int LOCATIONID = AttributesEnum.Locationid.index();
    public static final int ODATE = AttributesEnum.Odate.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int POSTED = AttributesEnum.Posted.index();
    public static final int POSTEDBY = AttributesEnum.Postedby.index();
    public static final int CREATEDBY = AttributesEnum.Createdby.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int MODIFIEDBY = AttributesEnum.Modifiedby.index();
    public static final int MODIFIEDDATE = AttributesEnum.ModifiedDate.index();
    public static final int TXTITEMID = AttributesEnum.txtItemId.index();
    public static final int TXTPARTCATEGORY = AttributesEnum.txtPartCategory.index();
    public static final int SRVOPENPARTS = AttributesEnum.SrvOpenparts.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SrvStockopeningImpl() {
    }

    /**
     * Gets the attribute value for Sopngid, using the alias name Sopngid.
     * @return the value of Sopngid
     */
    public String getSopngid() {
        return (String) getAttributeInternal(SOPNGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Sopngid.
     * @param value value to set the Sopngid
     */
    public void setSopngid(String value) {
        setAttributeInternal(SOPNGID, value);
    }

    /**
     * Gets the attribute value for Locationid, using the alias name Locationid.
     * @return the value of Locationid
     */
    public String getLocationid() {
        return (String) getAttributeInternal(LOCATIONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Locationid.
     * @param value value to set the Locationid
     */
    public void setLocationid(String value) {
        setAttributeInternal(LOCATIONID, value);
    }

    /**
     * Gets the attribute value for Odate, using the alias name Odate.
     * @return the value of Odate
     */
    public Date getOdate() {
        return (Date) getAttributeInternal(ODATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Odate.
     * @param value value to set the Odate
     */
    public void setOdate(Date value) {
        setAttributeInternal(ODATE, value);
    }

    /**
     * Gets the attribute value for Remarks, using the alias name Remarks.
     * @return the value of Remarks
     */
    public String getRemarks() {
        return (String) getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Remarks.
     * @param value value to set the Remarks
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for Posted, using the alias name Posted.
     * @return the value of Posted
     */
    public String getPosted() {
        return (String) getAttributeInternal(POSTED);
    }

    /**
     * Sets <code>value</code> as the attribute value for Posted.
     * @param value value to set the Posted
     */
    public void setPosted(String value) {
        setAttributeInternal(POSTED, value);
    }

    /**
     * Gets the attribute value for Postedby, using the alias name Postedby.
     * @return the value of Postedby
     */
    public String getPostedby() {
        return (String) getAttributeInternal(POSTEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Postedby.
     * @param value value to set the Postedby
     */
    public void setPostedby(String value) {
        setAttributeInternal(POSTEDBY, value);
    }

    /**
     * Gets the attribute value for Createdby, using the alias name Createdby.
     * @return the value of Createdby
     */
    public String getCreatedby() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Createdby.
     * @param value value to set the Createdby
     */
    public void setCreatedby(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreatedDate, using the alias name CreatedDate.
     * @return the value of CreatedDate
     */
    public Date getCreatedDate() {
        return (Date) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedDate.
     * @param value value to set the CreatedDate
     */
    public void setCreatedDate(Date value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**
     * Gets the attribute value for Modifiedby, using the alias name Modifiedby.
     * @return the value of Modifiedby
     */
    public String getModifiedby() {
        return (String) getAttributeInternal(MODIFIEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Modifiedby.
     * @param value value to set the Modifiedby
     */
    public void setModifiedby(String value) {
        setAttributeInternal(MODIFIEDBY, value);
    }

    /**
     * Gets the attribute value for ModifiedDate, using the alias name ModifiedDate.
     * @return the value of ModifiedDate
     */
    public Date getModifiedDate() {
        return (Date) getAttributeInternal(MODIFIEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ModifiedDate.
     * @param value value to set the ModifiedDate
     */
    public void setModifiedDate(Date value) {
        setAttributeInternal(MODIFIEDDATE, value);
    }

    /**
     * Gets the attribute value for txtItemId, using the alias name txtItemId.
     * @return the value of txtItemId
     */
    public String gettxtItemId() {
        return (String) getAttributeInternal(TXTITEMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for txtItemId.
     * @param value value to set the txtItemId
     */
    public void settxtItemId(String value) {
        setAttributeInternal(TXTITEMID, value);
    }

    /**
     * Gets the attribute value for txtPartCategory, using the alias name txtPartCategory.
     * @return the value of txtPartCategory
     */
    public String gettxtPartCategory() {
        return (String) getAttributeInternal(TXTPARTCATEGORY);
    }

    /**
     * Sets <code>value</code> as the attribute value for txtPartCategory.
     * @param value value to set the txtPartCategory
     */
    public void settxtPartCategory(String value) {
        setAttributeInternal(TXTPARTCATEGORY, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getSrvOpenparts() {
        return (RowIterator) getAttributeInternal(SRVOPENPARTS);
    }

    /**
     * @param sopngid key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String sopngid) {
        return new Key(new Object[] { sopngid });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("dgcom.model.eo.srv.SrvStockopening");
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        
        if (operation==DML_INSERT) {
            ApplicationModule am=this.getDBTransaction().getRootApplicationModule();
            ViewObject        vo=am.findViewObject("PKparts_price");
            if (vo!=null)
                {
                   vo.remove();     
                }
            vo=am.createViewObjectFromQueryStmt("mystockopeningPK",
                                                "Select 2||'"+getLocationid()+"'||'"+DigicomClass.doGetFormattedDate(getOdate().toString(), "yyMM")+"'||Lpad(nvl(max(to_number(substr(SETDELIID,-5)))+1,1) ,5,'0') as PK \n"+
                                                "from srv_stockopening \n"+
                                                "Where to_char(Odate,'rrmm') ='"+ DigicomClass.doGetFormattedDate(getOdate().toString(), "yyMM")+"' \n"+
                                                "and locationid = '"+getLocationid()+"'");
            vo.executeQuery();
            setSopngid(vo.first().getAttribute(0).toString());
        }
        super.doDML(operation, e);
    }
}

