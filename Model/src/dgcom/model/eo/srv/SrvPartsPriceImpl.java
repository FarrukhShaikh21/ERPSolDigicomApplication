package dgcom.model.eo.srv;

import dgcom.model.stand.DigicomClass;
import dgcom.model.stand.DigicomEntityImpl;

import oracle.jbo.ApplicationModule;
import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.ViewObject;
import oracle.jbo.domain.Date;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Sep 27 19:19:50 PKT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SrvPartsPriceImpl extends DigicomEntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        IpId,
        Locationid,
        DocDate,
        EffectFrom,
        EffectTo,
        Createdby,
        CreatedDate,
        Modifiedby,
        ModifiedDate,
        Posted,
        txtItemId,
        txtPartCategory,
        SrvIpdetl;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int IPID = AttributesEnum.IpId.index();
    public static final int LOCATIONID = AttributesEnum.Locationid.index();
    public static final int DOCDATE = AttributesEnum.DocDate.index();
    public static final int EFFECTFROM = AttributesEnum.EffectFrom.index();
    public static final int EFFECTTO = AttributesEnum.EffectTo.index();
    public static final int CREATEDBY = AttributesEnum.Createdby.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int MODIFIEDBY = AttributesEnum.Modifiedby.index();
    public static final int MODIFIEDDATE = AttributesEnum.ModifiedDate.index();
    public static final int POSTED = AttributesEnum.Posted.index();
    public static final int TXTITEMID = AttributesEnum.txtItemId.index();
    public static final int TXTPARTCATEGORY = AttributesEnum.txtPartCategory.index();
    public static final int SRVIPDETL = AttributesEnum.SrvIpdetl.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SrvPartsPriceImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("dgcom.model.eo.srv.SrvPartsPrice");
    }


    /**
     * Gets the attribute value for IpId, using the alias name IpId.
     * @return the value of IpId
     */
    public String getIpId() {
        return (String) getAttributeInternal(IPID);
    }

    /**
     * Sets <code>value</code> as the attribute value for IpId.
     * @param value value to set the IpId
     */
    public void setIpId(String value) {
        setAttributeInternal(IPID, value);
    }

    /**
     * Gets the attribute value for Locationid, using the alias name Locationid.
     * @return the value of Locationid
     */
    public String getLocationid() {
        return (String) getAttributeInternal(LOCATIONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Locationid.
     * @param value value to set the Locationid
     */
    public void setLocationid(String value) {
        setAttributeInternal(LOCATIONID, value);
    }

    /**
     * Gets the attribute value for DocDate, using the alias name DocDate.
     * @return the value of DocDate
     */
    public Date getDocDate() {
        return (Date) getAttributeInternal(DOCDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocDate.
     * @param value value to set the DocDate
     */
    public void setDocDate(Date value) {
        setAttributeInternal(DOCDATE, value);
    }

    /**
     * Gets the attribute value for EffectFrom, using the alias name EffectFrom.
     * @return the value of EffectFrom
     */
    public Date getEffectFrom() {
        return (Date) getAttributeInternal(EFFECTFROM);
    }

    /**
     * Sets <code>value</code> as the attribute value for EffectFrom.
     * @param value value to set the EffectFrom
     */
    public void setEffectFrom(Date value) {
        setAttributeInternal(EFFECTFROM, value);
    }

    /**
     * Gets the attribute value for EffectTo, using the alias name EffectTo.
     * @return the value of EffectTo
     */
    public Date getEffectTo() {
        return (Date) getAttributeInternal(EFFECTTO);
    }

    /**
     * Sets <code>value</code> as the attribute value for EffectTo.
     * @param value value to set the EffectTo
     */
    public void setEffectTo(Date value) {
        setAttributeInternal(EFFECTTO, value);
    }

    /**
     * Gets the attribute value for Createdby, using the alias name Createdby.
     * @return the value of Createdby
     */
    public String getCreatedby() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Createdby.
     * @param value value to set the Createdby
     */
    public void setCreatedby(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreatedDate, using the alias name CreatedDate.
     * @return the value of CreatedDate
     */
    public Date getCreatedDate() {
        return (Date) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedDate.
     * @param value value to set the CreatedDate
     */
    public void setCreatedDate(Date value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**
     * Gets the attribute value for Modifiedby, using the alias name Modifiedby.
     * @return the value of Modifiedby
     */
    public String getModifiedby() {
        return (String) getAttributeInternal(MODIFIEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Modifiedby.
     * @param value value to set the Modifiedby
     */
    public void setModifiedby(String value) {
        setAttributeInternal(MODIFIEDBY, value);
    }

    /**
     * Gets the attribute value for ModifiedDate, using the alias name ModifiedDate.
     * @return the value of ModifiedDate
     */
    public Date getModifiedDate() {
        return (Date) getAttributeInternal(MODIFIEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ModifiedDate.
     * @param value value to set the ModifiedDate
     */
    public void setModifiedDate(Date value) {
        setAttributeInternal(MODIFIEDDATE, value);
    }

    /**
     * Gets the attribute value for Posted, using the alias name Posted.
     * @return the value of Posted
     */
    public String getPosted() {
        return (String) getAttributeInternal(POSTED);
    }

    /**
     * Sets <code>value</code> as the attribute value for Posted.
     * @param value value to set the Posted
     */
    public void setPosted(String value) {
        setAttributeInternal(POSTED, value);
    }


    /**
     * Gets the attribute value for txtItemId, using the alias name txtItemId.
     * @return the value of txtItemId
     */
    public String gettxtItemId() {
        return (String) getAttributeInternal(TXTITEMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for txtItemId.
     * @param value value to set the txtItemId
     */
    public void settxtItemId(String value) {
        setAttributeInternal(TXTITEMID, value);
    }

    /**
     * Gets the attribute value for txtPartCategory, using the alias name txtPartCategory.
     * @return the value of txtPartCategory
     */
    public String gettxtPartCategory() {
        return (String) getAttributeInternal(TXTPARTCATEGORY);
    }

    /**
     * Sets <code>value</code> as the attribute value for txtPartCategory.
     * @param value value to set the txtPartCategory
     */
    public void settxtPartCategory(String value) {
        setAttributeInternal(TXTPARTCATEGORY, value);
        getDBTransaction().commit();
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getSrvIpdetl() {
        return (RowIterator) getAttributeInternal(SRVIPDETL);
    }


    /**
     * @param ipId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String ipId) {
        return new Key(new Object[] { ipId });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        
    }
    

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if (operation==DML_INSERT) {
                ApplicationModule am=this.getDBTransaction().getRootApplicationModule();
                ViewObject        vo=am.findViewObject("PKparts_price");
                if (vo!=null)
                    {
                       vo.remove();     
                    }
                vo=am.createViewObjectFromQueryStmt("PKparts_price",
                                                    "Select '"+getLocationid()+"'||'-'||'"+DigicomClass.doGetFormattedDate(getDocDate().toString(), "yyyyMM")+"'||Lpad(nvl(max(to_number(substr(ip_id,-5)))+1,1) ,5,'0') as PKparts_price \n"+
                                                    "from srv_parts_price \n"+
                                                    "Where to_char(Doc_Date,'rrmm') ='"+ DigicomClass.doGetFormattedDate(getDocDate().toString(), "yyMM")+"' \n"+
                                                    "and locationid = '"+getLocationid()+"'");
                vo.executeQuery();
                setIpId(vo.first().getAttribute(0).toString());
//                populateAttributeAsChanged(IPID,vo.first().getAttribute(0).toString());
        }
        super.doDML(operation, e);
    }
    @Override
    public boolean isAttributeUpdateable(int i) {
        // TODO Implement this method
        if (getPosted().equals("Y")) {
            return false;
       }
        return super.isAttributeUpdateable(i);
    }
}

