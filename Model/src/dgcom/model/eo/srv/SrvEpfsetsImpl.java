package dgcom.model.eo.srv;

import dgcom.model.eo.inv.InItemsImpl;
import dgcom.model.stand.DigicomClass;
import dgcom.model.stand.DigicomEntityImpl;

import oracle.jbo.ApplicationModule;
import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.ViewObject;
import oracle.jbo.domain.Date;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Jul 23 11:08:52 PKT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SrvEpfsetsImpl extends DigicomEntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        ExtId,
        Locationid,
        Itemid,
        Storeid,
        Edate,
        ImeiNo,
        Remarks,
        Posted,
        Postedby,
        Createdby,
        CreatedDate,
        Modifiedby,
        ModifiedDate,
        Doctype,
        IsMigrated,
        MigratedDate,
        txtToStoreId,
        txtStoreName,
        txtModelName,
        txtToStoreName,
        SrvEpfsetsdetl,
        AllStores,
        InItems,
        AccSrvBompartsByItem;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int EXTID = AttributesEnum.ExtId.index();
    public static final int LOCATIONID = AttributesEnum.Locationid.index();
    public static final int ITEMID = AttributesEnum.Itemid.index();
    public static final int STOREID = AttributesEnum.Storeid.index();
    public static final int EDATE = AttributesEnum.Edate.index();
    public static final int IMEINO = AttributesEnum.ImeiNo.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int POSTED = AttributesEnum.Posted.index();
    public static final int POSTEDBY = AttributesEnum.Postedby.index();
    public static final int CREATEDBY = AttributesEnum.Createdby.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int MODIFIEDBY = AttributesEnum.Modifiedby.index();
    public static final int MODIFIEDDATE = AttributesEnum.ModifiedDate.index();
    public static final int DOCTYPE = AttributesEnum.Doctype.index();
    public static final int ISMIGRATED = AttributesEnum.IsMigrated.index();
    public static final int MIGRATEDDATE = AttributesEnum.MigratedDate.index();
    public static final int TXTTOSTOREID = AttributesEnum.txtToStoreId.index();
    public static final int TXTSTORENAME = AttributesEnum.txtStoreName.index();
    public static final int TXTMODELNAME = AttributesEnum.txtModelName.index();
    public static final int TXTTOSTORENAME = AttributesEnum.txtToStoreName.index();
    public static final int SRVEPFSETSDETL = AttributesEnum.SrvEpfsetsdetl.index();
    public static final int ALLSTORES = AttributesEnum.AllStores.index();
    public static final int INITEMS = AttributesEnum.InItems.index();
    public static final int ACCSRVBOMPARTSBYITEM = AttributesEnum.AccSrvBompartsByItem.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SrvEpfsetsImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("dgcom.model.eo.srv.SrvEpfsets");
    }


    /**
     * Gets the attribute value for ExtId, using the alias name ExtId.
     * @return the value of ExtId
     */
    public String getExtId() {
        return (String) getAttributeInternal(EXTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ExtId.
     * @param value value to set the ExtId
     */
    public void setExtId(String value) {
        setAttributeInternal(EXTID, value);
    }

    /**
     * Gets the attribute value for Locationid, using the alias name Locationid.
     * @return the value of Locationid
     */
    public String getLocationid() {
        return (String) getAttributeInternal(LOCATIONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Locationid.
     * @param value value to set the Locationid
     */
    public void setLocationid(String value) {
        setAttributeInternal(LOCATIONID, value);
    }

    /**
     * Gets the attribute value for Itemid, using the alias name Itemid.
     * @return the value of Itemid
     */
    public String getItemid() {
        return (String) getAttributeInternal(ITEMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Itemid.
     * @param value value to set the Itemid
     */
    public void setItemid(String value) {
        setAttributeInternal(ITEMID, value);
        
            if (getDoctype().equals("D")) {
            doPopulateDetail(getItemid());
        }
        

    }

    /**
     * Gets the attribute value for Storeid, using the alias name Storeid.
     * @return the value of Storeid
     */
    public String getStoreid() {
        return (String) getAttributeInternal(STOREID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Storeid.
     * @param value value to set the Storeid
     */
    public void setStoreid(String value) {
        setAttributeInternal(STOREID, value);
    }

    /**
     * Gets the attribute value for Edate, using the alias name Edate.
     * @return the value of Edate
     */
    public Date getEdate() {
        return (Date) getAttributeInternal(EDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Edate.
     * @param value value to set the Edate
     */
    public void setEdate(Date value) {
        setAttributeInternal(EDATE, value);
    }

    /**
     * Gets the attribute value for ImeiNo, using the alias name ImeiNo.
     * @return the value of ImeiNo
     */
    public String getImeiNo() {
        return (String) getAttributeInternal(IMEINO);
    }

    /**
     * Sets <code>value</code> as the attribute value for ImeiNo.
     * @param value value to set the ImeiNo
     */
    public void setImeiNo(String value) {
        setAttributeInternal(IMEINO, value);
        doPopulateDetail(getItemid());
    }

    @Override
    protected void validateEntity() {
        System.out.println("// TODO Implement this method");
        // TODO Implement this method
        super.validateEntity();
    }

    public void doPopulateDetail(String pItemId) {
    while(getSrvEpfsetsdetl().getRowCount()>0) {
        getSrvEpfsetsdetl().first().remove();
    }
    try {
    
    getAccSrvBompartsByItem().setNamedWhereClauseParam("P_ADF_ITEMID", pItemId);
    getAccSrvBompartsByItem().executeQuery();
    getAccSrvBompartsByItem().first();
    ApplicationModule am=this.getDBTransaction().getRootApplicationModule();
    
    ViewObject vo=am.findViewObject("SrvEpfsetsdetlDETCRUD");
    while(getSrvEpfsetsdetl().getRowCount()>0) {
        getSrvEpfsetsdetl().first().remove();
    }
    vo.executeQuery();
    if (getAccSrvBompartsByItem().getRowCount()>0) {
        Row r;
       for (int i = 0; i < getAccSrvBompartsByItem().getRowCount(); i++) {
            r=this.getSrvEpfsetsdetl().createRow();
            r.setAttribute("Partid", getAccSrvBompartsByItem().getCurrentRow().getAttribute("Partid"));
           validateEntity();
            r.setAttribute("Exqty", getAccSrvBompartsByItem().getCurrentRow().getAttribute("Qty"));
            
            if (getDoctype().equals("D")) {
                        r.setAttribute("Storeid", gettxtToStoreId());
                    }
            getSrvEpfsetsdetl().insertRow(r);
            vo.executeQuery();
           if (getAccSrvBompartsByItem().hasNext()) {
               getAccSrvBompartsByItem().next();
           }
        }
    }


    } catch (NullPointerException e) {
        ;
    }
}
    /**
     * Gets the attribute value for Remarks, using the alias name Remarks.
     * @return the value of Remarks
     */
    public String getRemarks() {
        return (String) getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Remarks.
     * @param value value to set the Remarks
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for Posted, using the alias name Posted.
     * @return the value of Posted
     */
    public String getPosted() {
        return (String) getAttributeInternal(POSTED);
    }

    /**
     * Sets <code>value</code> as the attribute value for Posted.
     * @param value value to set the Posted
     */
    public void setPosted(String value) {
        setAttributeInternal(POSTED, value);
    }

    /**
     * Gets the attribute value for Postedby, using the alias name Postedby.
     * @return the value of Postedby
     */
    public String getPostedby() {
        return (String) getAttributeInternal(POSTEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Postedby.
     * @param value value to set the Postedby
     */
    public void setPostedby(String value) {
        setAttributeInternal(POSTEDBY, value);
    }

    /**
     * Gets the attribute value for Createdby, using the alias name Createdby.
     * @return the value of Createdby
     */
    public String getCreatedby() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Createdby.
     * @param value value to set the Createdby
     */
    public void setCreatedby(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreatedDate, using the alias name CreatedDate.
     * @return the value of CreatedDate
     */
    public Date getCreatedDate() {
        return (Date) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedDate.
     * @param value value to set the CreatedDate
     */
    public void setCreatedDate(Date value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**
     * Gets the attribute value for Modifiedby, using the alias name Modifiedby.
     * @return the value of Modifiedby
     */
    public String getModifiedby() {
        return (String) getAttributeInternal(MODIFIEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Modifiedby.
     * @param value value to set the Modifiedby
     */
    public void setModifiedby(String value) {
        setAttributeInternal(MODIFIEDBY, value);
    }

    /**
     * Gets the attribute value for ModifiedDate, using the alias name ModifiedDate.
     * @return the value of ModifiedDate
     */
    public Date getModifiedDate() {
        return (Date) getAttributeInternal(MODIFIEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ModifiedDate.
     * @param value value to set the ModifiedDate
     */
    public void setModifiedDate(Date value) {
        setAttributeInternal(MODIFIEDDATE, value);
    }

    /**
     * Gets the attribute value for Doctype, using the alias name Doctype.
     * @return the value of Doctype
     */
    public String getDoctype() {
        return (String) getAttributeInternal(DOCTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Doctype.
     * @param value value to set the Doctype
     */
    public void setDoctype(String value) {
        setAttributeInternal(DOCTYPE, value);
    }

    /**
     * Gets the attribute value for IsMigrated, using the alias name IsMigrated.
     * @return the value of IsMigrated
     */
    public String getIsMigrated() {
        return (String) getAttributeInternal(ISMIGRATED);
    }

    /**
     * Sets <code>value</code> as the attribute value for IsMigrated.
     * @param value value to set the IsMigrated
     */
    public void setIsMigrated(String value) {
        setAttributeInternal(ISMIGRATED, value);
    }

    /**
     * Gets the attribute value for MigratedDate, using the alias name MigratedDate.
     * @return the value of MigratedDate
     */
    public Date getMigratedDate() {
        return (Date) getAttributeInternal(MIGRATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for MigratedDate.
     * @param value value to set the MigratedDate
     */
    public void setMigratedDate(Date value) {
        setAttributeInternal(MIGRATEDDATE, value);
    }

    /**
     * Gets the attribute value for txtToStoreId, using the alias name txtToStoreId.
     * @return the value of txtToStoreId
     */
    public String gettxtToStoreId() {
        return (String) getAttributeInternal(TXTTOSTOREID);
    }

    /**
     * Sets <code>value</code> as the attribute value for txtToStoreId.
     * @param value value to set the txtToStoreId
     */
    public void settxtToStoreId(String value) {
        setAttributeInternal(TXTTOSTOREID, value);
    }

    /**
     * Gets the attribute value for txtStoreName, using the alias name txtStoreName.
     * @return the value of txtStoreName
     */
    public String gettxtStoreName() {
        return (String) getAttributeInternal(TXTSTORENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for txtStoreName.
     * @param value value to set the txtStoreName
     */
    public void settxtStoreName(String value) {
        setAttributeInternal(TXTSTORENAME, value);
    }

    /**
     * Gets the attribute value for txtModelName, using the alias name txtModelName.
     * @return the value of txtModelName
     */
    public String gettxtModelName() {
        return (String) getAttributeInternal(TXTMODELNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for txtModelName.
     * @param value value to set the txtModelName
     */
    public void settxtModelName(String value) {
        setAttributeInternal(TXTMODELNAME, value);
    }

    /**
     * Gets the attribute value for txtToStoreName, using the alias name txtToStoreName.
     * @return the value of txtToStoreName
     */
    public String gettxtToStoreName() {
        return (String) getAttributeInternal(TXTTOSTORENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for txtToStoreName.
     * @param value value to set the txtToStoreName
     */
    public void settxtToStoreName(String value) {
        setAttributeInternal(TXTTOSTORENAME, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getSrvEpfsetsdetl() {
        return (RowIterator) getAttributeInternal(SRVEPFSETSDETL);
    }


    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getAllStores() {
        return (EntityImpl) getAttributeInternal(ALLSTORES);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setAllStores(EntityImpl value) {
        setAttributeInternal(ALLSTORES, value);
    }

    /**
     * @return the associated entity dgcom.model.eo.inv.InItemsImpl.
     */
    public InItemsImpl getInItems() {
        return (InItemsImpl) getAttributeInternal(INITEMS);
    }

    /**
     * Sets <code>value</code> as the associated entity dgcom.model.eo.inv.InItemsImpl.
     */
    public void setInItems(InItemsImpl value) {
        setAttributeInternal(INITEMS, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AccSrvBompartsByItemAsso.
     */
    public RowSet getAccSrvBompartsByItem() {
        return (RowSet) getAttributeInternal(ACCSRVBOMPARTSBYITEM);
    }


    /**
     * @param extId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String extId) {
        return new Key(new Object[] { extId });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        
        if (operation==DML_INSERT) {
            ApplicationModule am=this.getDBTransaction().getRootApplicationModule();
            ViewObject        vo=am.findViewObject("mySetDismisPartPK");
            if (vo!=null)
                {
                   vo.remove();     
                }
            vo=am.createViewObjectFromQueryStmt("mySetDismisPartPK",
                                                "Select 2||'"+getLocationid()+"'||'"+DigicomClass.doGetFormattedDate(getEdate().toString(), "yyMM")+"'||Lpad(nvl(max(to_number(substr(EXT_ID,-4)))+1,1) ,4,'0') as PK \n"+
                                                "from SRV_EPFSETS \n"+
                                                "Where to_char(EDATE,'rrmm') ='"+ DigicomClass.doGetFormattedDate(getEdate().toString(), "yyMM")+"' \n"+
                                                "and locationid = '"+getLocationid()+"'");
            vo.executeQuery();
            setExtId(vo.first().getAttribute(0).toString());
        }  
        super.doDML(operation, e);
    }
}

