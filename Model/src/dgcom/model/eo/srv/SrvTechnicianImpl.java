package dgcom.model.eo.srv;

import dgcom.model.stand.DigicomEntityImpl;

import oracle.jbo.ApplicationModule;
import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.ViewObject;
import oracle.jbo.domain.Date;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Jun 23 09:36:52 PKT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SrvTechnicianImpl extends DigicomEntityImpl {
    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Technicianid,
        Empid,
        Techician,
        Createdby,
        CreatedDate,
        Modifiedby,
        ModifiedDate,
        Locationid,
        Exist,
        SrvJobassign,
        SrvJobqc,
        SrvIssuereturn,
        SrvIssuance;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int TECHNICIANID = AttributesEnum.Technicianid.index();
    public static final int EMPID = AttributesEnum.Empid.index();
    public static final int TECHICIAN = AttributesEnum.Techician.index();
    public static final int CREATEDBY = AttributesEnum.Createdby.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int MODIFIEDBY = AttributesEnum.Modifiedby.index();
    public static final int MODIFIEDDATE = AttributesEnum.ModifiedDate.index();
    public static final int LOCATIONID = AttributesEnum.Locationid.index();
    public static final int EXIST = AttributesEnum.Exist.index();
    public static final int SRVJOBASSIGN = AttributesEnum.SrvJobassign.index();
    public static final int SRVJOBQC = AttributesEnum.SrvJobqc.index();
    public static final int SRVISSUERETURN = AttributesEnum.SrvIssuereturn.index();
    public static final int SRVISSUANCE = AttributesEnum.SrvIssuance.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SrvTechnicianImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("dgcom.model.eo.srv.SrvTechnician");
    }


    /**
     * Gets the attribute value for Technicianid, using the alias name Technicianid.
     * @return the value of Technicianid
     */
    public String getTechnicianid() {
        return (String) getAttributeInternal(TECHNICIANID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Technicianid.
     * @param value value to set the Technicianid
     */
    public void setTechnicianid(String value) {
        setAttributeInternal(TECHNICIANID, value);
    }

    /**
     * Gets the attribute value for Empid, using the alias name Empid.
     * @return the value of Empid
     */
    public String getEmpid() {
        return (String) getAttributeInternal(EMPID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Empid.
     * @param value value to set the Empid
     */
    public void setEmpid(String value) {
        setAttributeInternal(EMPID, value);
    }

    /**
     * Gets the attribute value for Techician, using the alias name Techician.
     * @return the value of Techician
     */
    public String getTechician() {
        return (String) getAttributeInternal(TECHICIAN);
    }

    /**
     * Sets <code>value</code> as the attribute value for Techician.
     * @param value value to set the Techician
     */
    public void setTechician(String value) {
        setAttributeInternal(TECHICIAN, value);
    }

    /**
     * Gets the attribute value for Createdby, using the alias name Createdby.
     * @return the value of Createdby
     */
    public String getCreatedby() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Createdby.
     * @param value value to set the Createdby
     */
    public void setCreatedby(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreatedDate, using the alias name CreatedDate.
     * @return the value of CreatedDate
     */
    public Date getCreatedDate() {
        return (Date) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedDate.
     * @param value value to set the CreatedDate
     */
    public void setCreatedDate(Date value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**
     * Gets the attribute value for Modifiedby, using the alias name Modifiedby.
     * @return the value of Modifiedby
     */
    public String getModifiedby() {
        return (String) getAttributeInternal(MODIFIEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Modifiedby.
     * @param value value to set the Modifiedby
     */
    public void setModifiedby(String value) {
        setAttributeInternal(MODIFIEDBY, value);
    }

    /**
     * Gets the attribute value for ModifiedDate, using the alias name ModifiedDate.
     * @return the value of ModifiedDate
     */
    public Date getModifiedDate() {
        return (Date) getAttributeInternal(MODIFIEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ModifiedDate.
     * @param value value to set the ModifiedDate
     */
    public void setModifiedDate(Date value) {
        setAttributeInternal(MODIFIEDDATE, value);
    }

    /**
     * Gets the attribute value for Locationid, using the alias name Locationid.
     * @return the value of Locationid
     */
    public String getLocationid() {
        return (String) getAttributeInternal(LOCATIONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Locationid.
     * @param value value to set the Locationid
     */
    public void setLocationid(String value) {
        setAttributeInternal(LOCATIONID, value);
    }

    /**
     * Gets the attribute value for Exist, using the alias name Exist.
     * @return the value of Exist
     */
    public String getExist() {
        return (String) getAttributeInternal(EXIST);
    }

    /**
     * Sets <code>value</code> as the attribute value for Exist.
     * @param value value to set the Exist
     */
    public void setExist(String value) {
        setAttributeInternal(EXIST, value);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getSrvJobassign() {
        return (RowIterator) getAttributeInternal(SRVJOBASSIGN);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getSrvJobqc() {
        return (RowIterator) getAttributeInternal(SRVJOBQC);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getSrvIssuereturn() {
        return (RowIterator) getAttributeInternal(SRVISSUERETURN);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getSrvIssuance() {
        return (RowIterator) getAttributeInternal(SRVISSUANCE);
    }


    /**
     * @param technicianid key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String technicianid) {
        return new Key(new Object[] { technicianid });
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if (operation==DML_INSERT) {
        ApplicationModule am = getDBTransaction().getRootApplicationModule();
        ViewObject vo = am.findViewObject("PKtechnician");

               if (vo!=null)
               {
               vo.remove();
               }
               vo = am.createViewObjectFromQueryStmt("PKtechnician","select LPAD(to_char(nvl(max(technicianid),0)+1),3,'0') as  PKtechnician from srv_technician");
               vo.executeQuery();
               setTechnicianid(vo.first().getAttribute(0).toString());
           }            
        super.doDML(operation, e);
    }    



}

