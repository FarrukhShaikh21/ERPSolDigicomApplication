package dgcom.model.eo.srv;

import dgcom.model.stand.DigicomClass;
import dgcom.model.stand.DigicomEntityImpl;

import java.sql.Timestamp;

import oracle.jbo.ApplicationModule;
import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.ViewObject;
import oracle.jbo.domain.Date;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Aug 23 11:22:56 PKT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SrvJobcomplainImpl extends DigicomEntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Compid,
        Locationid,
        Jobcardno,
        Compcatid,
        Cityid,
        Jcdate,
        Customer,
        Address,
        Phoneno2,
        Posted,
        Postedby,
        Createdby,
        CreatedDate,
        Modifiedby,
        ModifiedDate,
        CallType,
        txtImei,
        txtPhone,
        txtMobileNo,
        txtFromLocationId,
        txtLocationId,
        SrvJcdetl,
        SrvJobcard,
        AccAllLocations;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int COMPID = AttributesEnum.Compid.index();
    public static final int LOCATIONID = AttributesEnum.Locationid.index();
    public static final int JOBCARDNO = AttributesEnum.Jobcardno.index();
    public static final int COMPCATID = AttributesEnum.Compcatid.index();
    public static final int CITYID = AttributesEnum.Cityid.index();
    public static final int JCDATE = AttributesEnum.Jcdate.index();
    public static final int CUSTOMER = AttributesEnum.Customer.index();
    public static final int ADDRESS = AttributesEnum.Address.index();
    public static final int PHONENO2 = AttributesEnum.Phoneno2.index();
    public static final int POSTED = AttributesEnum.Posted.index();
    public static final int POSTEDBY = AttributesEnum.Postedby.index();
    public static final int CREATEDBY = AttributesEnum.Createdby.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int MODIFIEDBY = AttributesEnum.Modifiedby.index();
    public static final int MODIFIEDDATE = AttributesEnum.ModifiedDate.index();
    public static final int CALLTYPE = AttributesEnum.CallType.index();
    public static final int TXTIMEI = AttributesEnum.txtImei.index();
    public static final int TXTPHONE = AttributesEnum.txtPhone.index();
    public static final int TXTMOBILENO = AttributesEnum.txtMobileNo.index();
    public static final int TXTFROMLOCATIONID = AttributesEnum.txtFromLocationId.index();
    public static final int TXTLOCATIONID = AttributesEnum.txtLocationId.index();
    public static final int SRVJCDETL = AttributesEnum.SrvJcdetl.index();
    public static final int SRVJOBCARD = AttributesEnum.SrvJobcard.index();
    public static final int ACCALLLOCATIONS = AttributesEnum.AccAllLocations.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SrvJobcomplainImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("dgcom.model.eo.srv.SrvJobcomplain");
    }


    /**
     * Gets the attribute value for Compid, using the alias name Compid.
     * @return the value of Compid
     */
    public String getCompid() {
        return (String) getAttributeInternal(COMPID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Compid.
     * @param value value to set the Compid
     */
    public void setCompid(String value) {
        setAttributeInternal(COMPID, value);
    }

    /**
     * Gets the attribute value for Locationid, using the alias name Locationid.
     * @return the value of Locationid
     */
    public String getLocationid() {
        return (String) getAttributeInternal(LOCATIONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Locationid.
     * @param value value to set the Locationid
     */
    public void setLocationid(String value) {
        setAttributeInternal(LOCATIONID, value);
    }

    /**
     * Gets the attribute value for Jobcardno, using the alias name Jobcardno.
     * @return the value of Jobcardno
     */
    public String getJobcardno() {
        return (String) getAttributeInternal(JOBCARDNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for Jobcardno.
     * @param value value to set the Jobcardno
     */
    public void setJobcardno(String value) {
        setAttributeInternal(JOBCARDNO, value);
        try {
            if (gettxtFromLocationId() == null) {
                getAccAllLocations().setNamedWhereClauseParam("P_ADF_LOCATIONID", gettxtLocationId());
            } else
                getAccAllLocations().setNamedWhereClauseParam("P_ADF_LOCATIONID", gettxtFromLocationId());
            getAccAllLocations().executeQuery();
            setCityid(getAccAllLocations().first().getAttribute("Cityid").toString());
        } catch (NullPointerException e) {
            // TODO: Add catch code
            setCityid(null);
        }
    }

    /**
     * Gets the attribute value for Compcatid, using the alias name Compcatid.
     * @return the value of Compcatid
     */
    public String getCompcatid() {
        return (String) getAttributeInternal(COMPCATID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Compcatid.
     * @param value value to set the Compcatid
     */
    public void setCompcatid(String value) {
        setAttributeInternal(COMPCATID, value);
    }

    /**
     * Gets the attribute value for Cityid, using the alias name Cityid.
     * @return the value of Cityid
     */
    public String getCityid() {
        return (String) getAttributeInternal(CITYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Cityid.
     * @param value value to set the Cityid
     */
    public void setCityid(String value) {
        setAttributeInternal(CITYID, value);
    }

    /**
     * Gets the attribute value for Jcdate, using the alias name Jcdate.
     * @return the value of Jcdate
     */
    public Date getJcdate() {
        return (Date) getAttributeInternal(JCDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Jcdate.
     * @param value value to set the Jcdate
     */
    public void setJcdate(Date value) {
        setAttributeInternal(JCDATE, value);
    }

    /**
     * Gets the attribute value for Customer, using the alias name Customer.
     * @return the value of Customer
     */
    public String getCustomer() {
        return (String) getAttributeInternal(CUSTOMER);
    }

    /**
     * Sets <code>value</code> as the attribute value for Customer.
     * @param value value to set the Customer
     */
    public void setCustomer(String value) {
        setAttributeInternal(CUSTOMER, value);
    }

    /**
     * Gets the attribute value for Address, using the alias name Address.
     * @return the value of Address
     */
    public String getAddress() {
        return (String) getAttributeInternal(ADDRESS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Address.
     * @param value value to set the Address
     */
    public void setAddress(String value) {
        setAttributeInternal(ADDRESS, value);
    }

    /**
     * Gets the attribute value for Phoneno2, using the alias name Phoneno2.
     * @return the value of Phoneno2
     */
    public String getPhoneno2() {
        return (String) getAttributeInternal(PHONENO2);
    }

    /**
     * Sets <code>value</code> as the attribute value for Phoneno2.
     * @param value value to set the Phoneno2
     */
    public void setPhoneno2(String value) {
        setAttributeInternal(PHONENO2, value);
    }

    /**
     * Gets the attribute value for Posted, using the alias name Posted.
     * @return the value of Posted
     */
    public String getPosted() {
        return (String) getAttributeInternal(POSTED);
    }

    /**
     * Sets <code>value</code> as the attribute value for Posted.
     * @param value value to set the Posted
     */
    public void setPosted(String value) {
        setAttributeInternal(POSTED, value);
    }

    /**
     * Gets the attribute value for Postedby, using the alias name Postedby.
     * @return the value of Postedby
     */
    public String getPostedby() {
        return (String) getAttributeInternal(POSTEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Postedby.
     * @param value value to set the Postedby
     */
    public void setPostedby(String value) {
        setAttributeInternal(POSTEDBY, value);
    }

    /**
     * Gets the attribute value for Createdby, using the alias name Createdby.
     * @return the value of Createdby
     */
    public String getCreatedby() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Createdby.
     * @param value value to set the Createdby
     */
    public void setCreatedby(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreatedDate, using the alias name CreatedDate.
     * @return the value of CreatedDate
     */
    public Date getCreatedDate() {
        return (Date) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedDate.
     * @param value value to set the CreatedDate
     */
    public void setCreatedDate(Date value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**
     * Gets the attribute value for Modifiedby, using the alias name Modifiedby.
     * @return the value of Modifiedby
     */
    public String getModifiedby() {
        return (String) getAttributeInternal(MODIFIEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Modifiedby.
     * @param value value to set the Modifiedby
     */
    public void setModifiedby(String value) {
        setAttributeInternal(MODIFIEDBY, value);
    }

    /**
     * Gets the attribute value for ModifiedDate, using the alias name ModifiedDate.
     * @return the value of ModifiedDate
     */
    public Date getModifiedDate() {
        return (Date) getAttributeInternal(MODIFIEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ModifiedDate.
     * @param value value to set the ModifiedDate
     */
    public void setModifiedDate(Date value) {
        setAttributeInternal(MODIFIEDDATE, value);
    }

    /**
     * Gets the attribute value for CallType, using the alias name CallType.
     * @return the value of CallType
     */
    public String getCallType() {
        return (String) getAttributeInternal(CALLTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CallType.
     * @param value value to set the CallType
     */
    public void setCallType(String value) {
        setAttributeInternal(CALLTYPE, value);
    }

    /**
     * Gets the attribute value for txtImei, using the alias name txtImei.
     * @return the value of txtImei
     */
    public String gettxtImei() {
        return (String) getAttributeInternal(TXTIMEI);
    }


    /**
     * Gets the attribute value for txtPhone, using the alias name txtPhone.
     * @return the value of txtPhone
     */
    public String gettxtPhone() {
        return (String) getAttributeInternal(TXTPHONE);
    }


    /**
     * Gets the attribute value for txtMobileNo, using the alias name txtMobileNo.
     * @return the value of txtMobileNo
     */
    public String gettxtMobileNo() {
        return (String) getAttributeInternal(TXTMOBILENO);
    }


    /**
     * Gets the attribute value for txtFromLocationId, using the alias name txtFromLocationId.
     * @return the value of txtFromLocationId
     */
    public String gettxtFromLocationId() {
        return (String) getAttributeInternal(TXTFROMLOCATIONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for txtFromLocationId.
     * @param value value to set the txtFromLocationId
     */
    public void settxtFromLocationId(String value) {
        setAttributeInternal(TXTFROMLOCATIONID, value);
    }

    /**
     * Gets the attribute value for txtLocationId, using the alias name txtLocationId.
     * @return the value of txtLocationId
     */
    public String gettxtLocationId() {
        return (String) getAttributeInternal(TXTLOCATIONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for txtLocationId.
     * @param value value to set the txtLocationId
     */
    public void settxtLocationId(String value) {
        setAttributeInternal(TXTLOCATIONID, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getSrvJcdetl() {
        return (RowIterator) getAttributeInternal(SRVJCDETL);
    }


    /**
     * @return the associated entity SrvJobcardImpl.
     */
    public SrvJobcardImpl getSrvJobcard() {
        return (SrvJobcardImpl) getAttributeInternal(SRVJOBCARD);
    }

    /**
     * Sets <code>value</code> as the associated entity SrvJobcardImpl.
     */
    public void setSrvJobcard(SrvJobcardImpl value) {
        setAttributeInternal(SRVJOBCARD, value);
    }


    /**
     * Gets the view accessor <code>RowSet</code> AccAllLocations.
     */
    public RowSet getAccAllLocations() {
        return (RowSet) getAttributeInternal(ACCALLLOCATIONS);
    }


    /**
     * @param compid key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String compid) {
        return new Key(new Object[] { compid });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if (operation==DML_INSERT) {
            ApplicationModule am=this.getDBTransaction().getRootApplicationModule();
            ViewObject        vo=am.findViewObject("myJobComplaintPK");
            if (vo!=null)
                {
                   vo.remove();     
                }
            vo=am.createViewObjectFromQueryStmt("myJobComplaintPK",
                                                "Select 2||'"+getLocationid()+"'||'"+DigicomClass.doGetFormattedDate(getJcdate().toString(), "yyMM")+"'||Lpad(nvl(max(to_number(substr(COMPID,-5)))+1,1) ,5,'0') as PK \n"+
                                                "from SRV_JOBCOMPLAIN \n"+
                                                "Where to_char(JCDATE,'rrmm') ='"+ DigicomClass.doGetFormattedDate(getJcdate().toString(), "yyMM")+"' \n"+
                                                "and locationid = '"+getLocationid()+"'");
            vo.executeQuery();
            setCompid(vo.first().getAttribute(0).toString());
        }
        super.doDML(operation, e);
    }
}

