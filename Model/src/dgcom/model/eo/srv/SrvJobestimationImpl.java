package dgcom.model.eo.srv;

import dgcom.model.stand.DigicomClass;
import dgcom.model.stand.DigicomEntityImpl;

import java.math.BigDecimal;

import oracle.jbo.ApplicationModule;
import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.ViewObject;
import oracle.jbo.domain.Date;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Sep 22 11:53:39 PKT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SrvJobestimationImpl extends DigicomEntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        EstId,
        Locationid,
        Jobcardno,
        Esdate,
        Apcost,
        Approved,
        Remarks,
        Posted,
        Postedby,
        Createdby,
        CreatedDate,
        Modifiedby,
        ModifiedDate,
        Jobstatus,
        Lapcost,
        Lcharges,
        Epcost,
        Charges,
        PostedDate,
        PrevDoctype,
        PrevDocid,
        Cdate,
        Mdate,
        IsMigrated,
        MigratedDate,
        txtImeiNo,
        txtPhone,
        txtMobile,
        txtCustomer,
        txtWarranty,
        Estseq,
        SrvEstdetl,
        SrvJobcard;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ESTID = AttributesEnum.EstId.index();
    public static final int LOCATIONID = AttributesEnum.Locationid.index();
    public static final int JOBCARDNO = AttributesEnum.Jobcardno.index();
    public static final int ESDATE = AttributesEnum.Esdate.index();
    public static final int APCOST = AttributesEnum.Apcost.index();
    public static final int APPROVED = AttributesEnum.Approved.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int POSTED = AttributesEnum.Posted.index();
    public static final int POSTEDBY = AttributesEnum.Postedby.index();
    public static final int CREATEDBY = AttributesEnum.Createdby.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int MODIFIEDBY = AttributesEnum.Modifiedby.index();
    public static final int MODIFIEDDATE = AttributesEnum.ModifiedDate.index();
    public static final int JOBSTATUS = AttributesEnum.Jobstatus.index();
    public static final int LAPCOST = AttributesEnum.Lapcost.index();
    public static final int LCHARGES = AttributesEnum.Lcharges.index();
    public static final int EPCOST = AttributesEnum.Epcost.index();
    public static final int CHARGES = AttributesEnum.Charges.index();
    public static final int POSTEDDATE = AttributesEnum.PostedDate.index();
    public static final int PREVDOCTYPE = AttributesEnum.PrevDoctype.index();
    public static final int PREVDOCID = AttributesEnum.PrevDocid.index();
    public static final int CDATE = AttributesEnum.Cdate.index();
    public static final int MDATE = AttributesEnum.Mdate.index();
    public static final int ISMIGRATED = AttributesEnum.IsMigrated.index();
    public static final int MIGRATEDDATE = AttributesEnum.MigratedDate.index();
    public static final int TXTIMEINO = AttributesEnum.txtImeiNo.index();
    public static final int TXTPHONE = AttributesEnum.txtPhone.index();
    public static final int TXTMOBILE = AttributesEnum.txtMobile.index();
    public static final int TXTCUSTOMER = AttributesEnum.txtCustomer.index();
    public static final int TXTWARRANTY = AttributesEnum.txtWarranty.index();
    public static final int ESTSEQ = AttributesEnum.Estseq.index();
    public static final int SRVESTDETL = AttributesEnum.SrvEstdetl.index();
    public static final int SRVJOBCARD = AttributesEnum.SrvJobcard.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SrvJobestimationImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("dgcom.model.eo.srv.SrvJobestimation");
    }


    /**
     * Gets the attribute value for EstId, using the alias name EstId.
     * @return the value of EstId
     */
    public String getEstId() {
        return (String) getAttributeInternal(ESTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for EstId.
     * @param value value to set the EstId
     */
    public void setEstId(String value) {
        setAttributeInternal(ESTID, value);
    }

    /**
     * Gets the attribute value for Locationid, using the alias name Locationid.
     * @return the value of Locationid
     */
    public String getLocationid() {
        return (String) getAttributeInternal(LOCATIONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Locationid.
     * @param value value to set the Locationid
     */
    public void setLocationid(String value) {
        setAttributeInternal(LOCATIONID, value);
    }

    /**
     * Gets the attribute value for Jobcardno, using the alias name Jobcardno.
     * @return the value of Jobcardno
     */
    public String getJobcardno() {
        return (String) getAttributeInternal(JOBCARDNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for Jobcardno.
     * @param value value to set the Jobcardno
     */
    public void setJobcardno(String value) {
        setAttributeInternal(JOBCARDNO, value);
        if (value!=null) {
            ApplicationModule am=this.getDBTransaction().getRootApplicationModule();
            ViewObject        vo=am.findViewObject("VoEstimation");
            if (vo!=null) {
                vo.remove();
           }
            if (getSrvJobcard().getAttribute("Jobstatus").toString().equals("WE")) {
            vo=am.createViewObjectFromQueryStmt("VoEstimation", 
                                                " SELECT nvl(js.APCost,0),js.remarks " +
                                                " FROM srv_jobsolution js " +
                                                " where JOBCARDNO='"+getJobcardno()+"'"+
                                                " and to_number(substr(js.JSolution_Id,-9))="+
                                                " (Select max(to_number(substr(JSolution_Id,-9)))"+
                                                " from SRV_JOBSOLUTION "+
                                                " where JSSTATUS = 'Waiting For Estimation'"+
                                                " AND POSTED ='Y' "+
                                                " and JOBCARDNO = '"+getJobcardno()+"')"
                                                );
          vo.executeQuery();
                try {
                    setEpcost(new BigDecimal(vo.first().getAttribute(0).toString()));
                    setApcost(new BigDecimal(vo.first().getAttribute(0).toString()));
                    setRemarks((getRemarks() == null ? "" : getRemarks()) + " " +
                               vo.first().getAttribute(1).toString());
                } catch (Exception e) {
                    // TODO: Add catch code
                    e.printStackTrace();
                }
           }
            else
            if (getSrvJobcard().getAttribute("Jobstatus").toString().equals("WE2")) {
               vo=am.createViewObjectFromQueryStmt("VoEstimation", 
                                                   "SELECT nvl(LastCharges,0),nvl(LastEPCost,0),nvl(Charges,0),nvl(EPCost,0),' Review Warranty : '||decode(Warranty,'IW','Warranty ','OW','Optional Warranty ','NW','Non Warranty ') " +
                                                   " FROM SRV_REVIEWJOBWARRANTY js " +
                                                   " where JOBCARDNO='"+getJobcardno()+"'"+
                                                   " AND POSTED ='Y' " +
                                                    " and to_number(substr(js.reviewid,-8))="+
                                                   " (Select max(to_number(substr(reviewid,-8)))"+
                                                   " from SRV_REVIEWJOBWARRANTY "+
                                                   " WHERE  POSTED ='Y' "+
                                                   " and JOBCARDNO = '"+getJobcardno()+"')"
                                                   );
               vo.executeQuery();
                try {
                    setLcharges(new BigDecimal(vo.first().getAttribute(0).toString()));
                    setLapcost(new BigDecimal(vo.first().getAttribute(1).toString()));
                    setCharges(new BigDecimal(vo.first().getAttribute(2).toString()));
                    setEpcost(new BigDecimal(vo.first().getAttribute(3).toString()));
                    setApcost(new BigDecimal(vo.first().getAttribute(3).toString()));
                    setRemarks(vo.first().getAttribute(4).toString());
                    setRemarks(getRemarks()+" "+"Last Charges "+getLcharges()+" , Last Part Cost "+getLapcost());
                    
                } catch (NullPointerException e) {
                    // TODO: Add catch code
                    e.printStackTrace();
                }
           }
       }
    }

    /**
     * Gets the attribute value for Esdate, using the alias name Esdate.
     * @return the value of Esdate
     */
    public Date getEsdate() {
        return (Date) getAttributeInternal(ESDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Esdate.
     * @param value value to set the Esdate
     */
    public void setEsdate(Date value) {
        setAttributeInternal(ESDATE, value);
    }

    /**
     * Gets the attribute value for Apcost, using the alias name Apcost.
     * @return the value of Apcost
     */
    public BigDecimal getApcost() {
        return (BigDecimal) getAttributeInternal(APCOST);
    }

    /**
     * Sets <code>value</code> as the attribute value for Apcost.
     * @param value value to set the Apcost
     */
    public void setApcost(BigDecimal value) {
        setAttributeInternal(APCOST, value);
    }

    /**
     * Gets the attribute value for Approved, using the alias name Approved.
     * @return the value of Approved
     */
    public String getApproved() {
        return (String) getAttributeInternal(APPROVED);
    }

    /**
     * Sets <code>value</code> as the attribute value for Approved.
     * @param value value to set the Approved
     */
    public void setApproved(String value) {
        setAttributeInternal(APPROVED, value);
    }

    /**
     * Gets the attribute value for Remarks, using the alias name Remarks.
     * @return the value of Remarks
     */
    public String getRemarks() {
        return (String) getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Remarks.
     * @param value value to set the Remarks
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for Posted, using the alias name Posted.
     * @return the value of Posted
     */
    public String getPosted() {
        return (String) getAttributeInternal(POSTED);
    }

    /**
     * Sets <code>value</code> as the attribute value for Posted.
     * @param value value to set the Posted
     */
    public void setPosted(String value) {
        setAttributeInternal(POSTED, value);
    }

    /**
     * Gets the attribute value for Postedby, using the alias name Postedby.
     * @return the value of Postedby
     */
    public String getPostedby() {
        return (String) getAttributeInternal(POSTEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Postedby.
     * @param value value to set the Postedby
     */
    public void setPostedby(String value) {
        setAttributeInternal(POSTEDBY, value);
    }

    /**
     * Gets the attribute value for Createdby, using the alias name Createdby.
     * @return the value of Createdby
     */
    public String getCreatedby() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Createdby.
     * @param value value to set the Createdby
     */
    public void setCreatedby(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreatedDate, using the alias name CreatedDate.
     * @return the value of CreatedDate
     */
    public Date getCreatedDate() {
        return (Date) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedDate.
     * @param value value to set the CreatedDate
     */
    public void setCreatedDate(Date value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**
     * Gets the attribute value for Modifiedby, using the alias name Modifiedby.
     * @return the value of Modifiedby
     */
    public String getModifiedby() {
        return (String) getAttributeInternal(MODIFIEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Modifiedby.
     * @param value value to set the Modifiedby
     */
    public void setModifiedby(String value) {
        setAttributeInternal(MODIFIEDBY, value);
    }

    /**
     * Gets the attribute value for ModifiedDate, using the alias name ModifiedDate.
     * @return the value of ModifiedDate
     */
    public Date getModifiedDate() {
        return (Date) getAttributeInternal(MODIFIEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ModifiedDate.
     * @param value value to set the ModifiedDate
     */
    public void setModifiedDate(Date value) {
        setAttributeInternal(MODIFIEDDATE, value);
    }

    /**
     * Gets the attribute value for Jobstatus, using the alias name Jobstatus.
     * @return the value of Jobstatus
     */
    public String getJobstatus() {
        return (String) getAttributeInternal(JOBSTATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Jobstatus.
     * @param value value to set the Jobstatus
     */
    public void setJobstatus(String value) {
        setAttributeInternal(JOBSTATUS, value);
    }

    /**
     * Gets the attribute value for Lapcost, using the alias name Lapcost.
     * @return the value of Lapcost
     */
    public BigDecimal getLapcost() {
        return (BigDecimal) getAttributeInternal(LAPCOST);
    }

    /**
     * Sets <code>value</code> as the attribute value for Lapcost.
     * @param value value to set the Lapcost
     */
    public void setLapcost(BigDecimal value) {
        setAttributeInternal(LAPCOST, value);
    }

    /**
     * Gets the attribute value for Lcharges, using the alias name Lcharges.
     * @return the value of Lcharges
     */
    public BigDecimal getLcharges() {
        return (BigDecimal) getAttributeInternal(LCHARGES);
    }

    /**
     * Sets <code>value</code> as the attribute value for Lcharges.
     * @param value value to set the Lcharges
     */
    public void setLcharges(BigDecimal value) {
        setAttributeInternal(LCHARGES, value);
    }

    /**
     * Gets the attribute value for Epcost, using the alias name Epcost.
     * @return the value of Epcost
     */
    public BigDecimal getEpcost() {
        return (BigDecimal) getAttributeInternal(EPCOST);
    }

    /**
     * Sets <code>value</code> as the attribute value for Epcost.
     * @param value value to set the Epcost
     */
    public void setEpcost(BigDecimal value) {
        setAttributeInternal(EPCOST, value);
    }

    /**
     * Gets the attribute value for Charges, using the alias name Charges.
     * @return the value of Charges
     */
    public BigDecimal getCharges() {
        return (BigDecimal) getAttributeInternal(CHARGES);
    }

    /**
     * Sets <code>value</code> as the attribute value for Charges.
     * @param value value to set the Charges
     */
    public void setCharges(BigDecimal value) {
        setAttributeInternal(CHARGES, value);
    }

    /**
     * Gets the attribute value for PostedDate, using the alias name PostedDate.
     * @return the value of PostedDate
     */
    public Date getPostedDate() {
        return (Date) getAttributeInternal(POSTEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for PostedDate.
     * @param value value to set the PostedDate
     */
    public void setPostedDate(Date value) {
        setAttributeInternal(POSTEDDATE, value);
    }

    /**
     * Gets the attribute value for PrevDoctype, using the alias name PrevDoctype.
     * @return the value of PrevDoctype
     */
    public String getPrevDoctype() {
        return (String) getAttributeInternal(PREVDOCTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for PrevDoctype.
     * @param value value to set the PrevDoctype
     */
    public void setPrevDoctype(String value) {
        setAttributeInternal(PREVDOCTYPE, value);
    }

    /**
     * Gets the attribute value for PrevDocid, using the alias name PrevDocid.
     * @return the value of PrevDocid
     */
    public String getPrevDocid() {
        return (String) getAttributeInternal(PREVDOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for PrevDocid.
     * @param value value to set the PrevDocid
     */
    public void setPrevDocid(String value) {
        setAttributeInternal(PREVDOCID, value);
    }

    /**
     * Gets the attribute value for Cdate, using the alias name Cdate.
     * @return the value of Cdate
     */
    public Date getCdate() {
        return (Date) getAttributeInternal(CDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Cdate.
     * @param value value to set the Cdate
     */
    public void setCdate(Date value) {
        setAttributeInternal(CDATE, value);
    }

    /**
     * Gets the attribute value for Mdate, using the alias name Mdate.
     * @return the value of Mdate
     */
    public Date getMdate() {
        return (Date) getAttributeInternal(MDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Mdate.
     * @param value value to set the Mdate
     */
    public void setMdate(Date value) {
        setAttributeInternal(MDATE, value);
    }

    /**
     * Gets the attribute value for IsMigrated, using the alias name IsMigrated.
     * @return the value of IsMigrated
     */
    public String getIsMigrated() {
        return (String) getAttributeInternal(ISMIGRATED);
    }

    /**
     * Sets <code>value</code> as the attribute value for IsMigrated.
     * @param value value to set the IsMigrated
     */
    public void setIsMigrated(String value) {
        setAttributeInternal(ISMIGRATED, value);
    }

    /**
     * Gets the attribute value for MigratedDate, using the alias name MigratedDate.
     * @return the value of MigratedDate
     */
    public Date getMigratedDate() {
        return (Date) getAttributeInternal(MIGRATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for MigratedDate.
     * @param value value to set the MigratedDate
     */
    public void setMigratedDate(Date value) {
        setAttributeInternal(MIGRATEDDATE, value);
    }

    /**
     * Gets the attribute value for txtImeiNo, using the alias name txtImeiNo.
     * @return the value of txtImeiNo
     */
    public String gettxtImeiNo() {
        return (String) getAttributeInternal(TXTIMEINO);
    }

    /**
     * Sets <code>value</code> as the attribute value for txtImeiNo.
     * @param value value to set the txtImeiNo
     */
    public void settxtImeiNo(String value) {
        setAttributeInternal(TXTIMEINO, value);
    }

    /**
     * Gets the attribute value for txtPhone, using the alias name txtPhone.
     * @return the value of txtPhone
     */
    public String gettxtPhone() {
        return (String) getAttributeInternal(TXTPHONE);
    }

    /**
     * Sets <code>value</code> as the attribute value for txtPhone.
     * @param value value to set the txtPhone
     */
    public void settxtPhone(String value) {
        setAttributeInternal(TXTPHONE, value);
    }

    /**
     * Gets the attribute value for txtMobile, using the alias name txtMobile.
     * @return the value of txtMobile
     */
    public String gettxtMobile() {
        return (String) getAttributeInternal(TXTMOBILE);
    }

    /**
     * Sets <code>value</code> as the attribute value for txtMobile.
     * @param value value to set the txtMobile
     */
    public void settxtMobile(String value) {
        setAttributeInternal(TXTMOBILE, value);
    }


    /**
     * Gets the attribute value for txtCustomer, using the alias name txtCustomer.
     * @return the value of txtCustomer
     */
    public String gettxtCustomer() {
        return (String) getAttributeInternal(TXTCUSTOMER);
    }

    /**
     * Sets <code>value</code> as the attribute value for txtCustomer.
     * @param value value to set the txtCustomer
     */
    public void settxtCustomer(String value) {
        setAttributeInternal(TXTCUSTOMER, value);
    }

    /**
     * Gets the attribute value for txtWarranty, using the alias name txtWarranty.
     * @return the value of txtWarranty
     */
    public String gettxtWarranty() {
        return (String) getAttributeInternal(TXTWARRANTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for txtWarranty.
     * @param value value to set the txtWarranty
     */
    public void settxtWarranty(String value) {
        setAttributeInternal(TXTWARRANTY, value);
    }

    /**
     * Gets the attribute value for Estseq, using the alias name Estseq.
     * @return the value of Estseq
     */
    public Integer getEstseq() {
        return (Integer) getAttributeInternal(ESTSEQ);
    }

    /**
     * Sets <code>value</code> as the attribute value for Estseq.
     * @param value value to set the Estseq
     */
    public void setEstseq(Integer value) {
        setAttributeInternal(ESTSEQ, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getSrvEstdetl() {
        return (RowIterator) getAttributeInternal(SRVESTDETL);
    }

    /**
     * @return the associated entity SrvJobcardImpl.
     */
    public SrvJobcardImpl getSrvJobcard() {
        return (SrvJobcardImpl) getAttributeInternal(SRVJOBCARD);
    }

    /**
     * Sets <code>value</code> as the associated entity SrvJobcardImpl.
     */
    public void setSrvJobcard(SrvJobcardImpl value) {
        setAttributeInternal(SRVJOBCARD, value);
    }


    /**
     * @param estseq key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Integer estseq) {
        return new Key(new Object[] { estseq });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        setSrvSequenceName("SRV_JOBCARD_SEQ");
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if (operation==DML_INSERT) {
            ApplicationModule am=this.getDBTransaction().getRootApplicationModule();
            ViewObject        vo=am.findViewObject("myJobEstPK");
            if (vo!=null)
                {
                   vo.remove();     
                }
            vo=am.createViewObjectFromQueryStmt("myJobEstPK",
                                                "Select 2||'"+getLocationid()+"'||'"+DigicomClass.doGetFormattedDate(getEsdate().toString(), "yyMM")+"'||Lpad(nvl(max(to_number(substr(EST_ID,-5)))+1,1) ,5,'0') as PK \n"+
                                                "from SRV_JOBESTIMATION \n"+
                                                "Where to_char(ESDATE,'rrmm') ='"+ DigicomClass.doGetFormattedDate(getEsdate().toString(), "yyMM")+"' \n"+
                                                "and locationid = '"+getLocationid()+"'");
            vo.executeQuery();
            populateAttributeAsChanged(ESTID, vo.first().getAttribute(0).toString());
//            setEstId(vo.first().getAttribute(0).toString());
         
        }
        super.doDML(operation, e);
    }
}

