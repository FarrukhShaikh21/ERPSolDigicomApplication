package dgcom.model.eo.srv;

import dgcom.model.stand.DigicomClass;
import dgcom.model.stand.DigicomEntityImpl;

import oracle.jbo.ApplicationModule;
import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.ViewObject;
import oracle.jbo.domain.Date;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Jul 04 10:01:57 PKT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SrvLogisticImpl extends DigicomEntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Logid,
        Locationid,
        Fromlocationid,
        Logdate,
        Remarks,
        Posted,
        Postedby,
        Createdby,
        CreatedDate,
        Modifiedby,
        ModifiedDate,
        Docid,
        Doctypeid,
        Doctype,
        IsMigrated,
        MigratedDate,
        SrvLogdetl;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int LOGID = AttributesEnum.Logid.index();
    public static final int LOCATIONID = AttributesEnum.Locationid.index();
    public static final int FROMLOCATIONID = AttributesEnum.Fromlocationid.index();
    public static final int LOGDATE = AttributesEnum.Logdate.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int POSTED = AttributesEnum.Posted.index();
    public static final int POSTEDBY = AttributesEnum.Postedby.index();
    public static final int CREATEDBY = AttributesEnum.Createdby.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int MODIFIEDBY = AttributesEnum.Modifiedby.index();
    public static final int MODIFIEDDATE = AttributesEnum.ModifiedDate.index();
    public static final int DOCID = AttributesEnum.Docid.index();
    public static final int DOCTYPEID = AttributesEnum.Doctypeid.index();
    public static final int DOCTYPE = AttributesEnum.Doctype.index();
    public static final int ISMIGRATED = AttributesEnum.IsMigrated.index();
    public static final int MIGRATEDDATE = AttributesEnum.MigratedDate.index();
    public static final int SRVLOGDETL = AttributesEnum.SrvLogdetl.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SrvLogisticImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("dgcom.model.eo.srv.SrvLogistic");
    }

    /**
     * Gets the attribute value for Logid, using the alias name Logid.
     * @return the value of Logid
     */
    public String getLogid() {
        return (String) getAttributeInternal(LOGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Logid.
     * @param value value to set the Logid
     */
    public void setLogid(String value) {
        setAttributeInternal(LOGID, value);
    }

    /**
     * Gets the attribute value for Locationid, using the alias name Locationid.
     * @return the value of Locationid
     */
    public String getLocationid() {
        return (String) getAttributeInternal(LOCATIONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Locationid.
     * @param value value to set the Locationid
     */
    public void setLocationid(String value) {
        setAttributeInternal(LOCATIONID, value);
    }

    /**
     * Gets the attribute value for Fromlocationid, using the alias name Fromlocationid.
     * @return the value of Fromlocationid
     */
    public String getFromlocationid() {
        return (String) getAttributeInternal(FROMLOCATIONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Fromlocationid.
     * @param value value to set the Fromlocationid
     */
    public void setFromlocationid(String value) {
        setAttributeInternal(FROMLOCATIONID, value);
    }

    /**
     * Gets the attribute value for Logdate, using the alias name Logdate.
     * @return the value of Logdate
     */
    public Date getLogdate() {
        return (Date) getAttributeInternal(LOGDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Logdate.
     * @param value value to set the Logdate
     */
    public void setLogdate(Date value) {
        setAttributeInternal(LOGDATE, value);
    }

    /**
     * Gets the attribute value for Remarks, using the alias name Remarks.
     * @return the value of Remarks
     */
    public String getRemarks() {
        return (String) getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Remarks.
     * @param value value to set the Remarks
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for Posted, using the alias name Posted.
     * @return the value of Posted
     */
    public String getPosted() {
        return (String) getAttributeInternal(POSTED);
    }

    /**
     * Sets <code>value</code> as the attribute value for Posted.
     * @param value value to set the Posted
     */
    public void setPosted(String value) {
        setAttributeInternal(POSTED, value);
    }

    /**
     * Gets the attribute value for Postedby, using the alias name Postedby.
     * @return the value of Postedby
     */
    public String getPostedby() {
        return (String) getAttributeInternal(POSTEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Postedby.
     * @param value value to set the Postedby
     */
    public void setPostedby(String value) {
        setAttributeInternal(POSTEDBY, value);
    }

    /**
     * Gets the attribute value for Createdby, using the alias name Createdby.
     * @return the value of Createdby
     */
    public String getCreatedby() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Createdby.
     * @param value value to set the Createdby
     */
    public void setCreatedby(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreatedDate, using the alias name CreatedDate.
     * @return the value of CreatedDate
     */
    public Date getCreatedDate() {
        return (Date) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedDate.
     * @param value value to set the CreatedDate
     */
    public void setCreatedDate(Date value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**
     * Gets the attribute value for Modifiedby, using the alias name Modifiedby.
     * @return the value of Modifiedby
     */
    public String getModifiedby() {
        return (String) getAttributeInternal(MODIFIEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Modifiedby.
     * @param value value to set the Modifiedby
     */
    public void setModifiedby(String value) {
        setAttributeInternal(MODIFIEDBY, value);
    }

    /**
     * Gets the attribute value for ModifiedDate, using the alias name ModifiedDate.
     * @return the value of ModifiedDate
     */
    public Date getModifiedDate() {
        return (Date) getAttributeInternal(MODIFIEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ModifiedDate.
     * @param value value to set the ModifiedDate
     */
    public void setModifiedDate(Date value) {
        setAttributeInternal(MODIFIEDDATE, value);
    }

    /**
     * Gets the attribute value for Docid, using the alias name Docid.
     * @return the value of Docid
     */
    public String getDocid() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Docid.
     * @param value value to set the Docid
     */
    public void setDocid(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for Doctypeid, using the alias name Doctypeid.
     * @return the value of Doctypeid
     */
    public String getDoctypeid() {
        return (String) getAttributeInternal(DOCTYPEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Doctypeid.
     * @param value value to set the Doctypeid
     */
    public void setDoctypeid(String value) {
        setAttributeInternal(DOCTYPEID, value);
    }

    /**
     * Gets the attribute value for Doctype, using the alias name Doctype.
     * @return the value of Doctype
     */
    public String getDoctype() {
        return (String) getAttributeInternal(DOCTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Doctype.
     * @param value value to set the Doctype
     */
    public void setDoctype(String value) {
        setAttributeInternal(DOCTYPE, value);
    }

    /**
     * Gets the attribute value for IsMigrated, using the alias name IsMigrated.
     * @return the value of IsMigrated
     */
    public String getIsMigrated() {
        return (String) getAttributeInternal(ISMIGRATED);
    }

    /**
     * Sets <code>value</code> as the attribute value for IsMigrated.
     * @param value value to set the IsMigrated
     */
    public void setIsMigrated(String value) {
        setAttributeInternal(ISMIGRATED, value);
    }

    /**
     * Gets the attribute value for MigratedDate, using the alias name MigratedDate.
     * @return the value of MigratedDate
     */
    public Date getMigratedDate() {
        return (Date) getAttributeInternal(MIGRATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for MigratedDate.
     * @param value value to set the MigratedDate
     */
    public void setMigratedDate(Date value) {
        setAttributeInternal(MIGRATEDDATE, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getSrvLogdetl() {
        return (RowIterator) getAttributeInternal(SRVLOGDETL);
    }


    /**
     * @param logid key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String logid) {
        return new Key(new Object[] { logid });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        /*         Select :global.companyId||:LOCATIONID||to_char(:LogDATE,'rrmm')||
                                        Lpad(nvl(max(to_number(substr(LogId,-4)))+1,1) ,4,'0')
                into :SRV_LOGISTIC.LogId
        from SRV_LOGISTIC
        Where to_char(LogDATE,'rrmm') = to_char(:LogDATE,'rrmm')
        and locationid = :locationId;
         */

        if (operation==DML_INSERT) {
            ApplicationModule am=this.getDBTransaction().getRootApplicationModule();
            ViewObject        vo=am.findViewObject("myJobLogisPK");
            if (vo!=null)
                {
                   vo.remove();     
                }
            vo=am.createViewObjectFromQueryStmt("myJobLogisPK",
                                                "Select 2||'"+getLocationid()+"'||'"+DigicomClass.doGetFormattedDate(getLogdate().toString(), "yyMM")+"'||Lpad(nvl(max(to_number(substr(LogId,-4)))+1,1) ,4,'0') as PK \n"+
                                                "from SRV_LOGISTIC \n"+
                                                "Where to_char(LogDATE,'rrmm') ='"+ DigicomClass.doGetFormattedDate(getLogdate().toString(), "yyMM")+"' \n"+
                                                "and locationid = '"+getLocationid()+"'");
            vo.executeQuery();
            setLogid(vo.first().getAttribute(0).toString());
        }
        super.doDML(operation, e);
    }
}

